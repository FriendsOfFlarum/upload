{"version":3,"sources":["webpack://@fof/upload/webpack/bootstrap","webpack://@fof/upload/./admin.js","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/upload/./src/admin/components/UploadPage.js","webpack://@fof/upload/./src/admin/components/index.js","webpack://@fof/upload/./src/admin/index.js","webpack://@fof/upload/external \"flarum.core.compat['app']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Alert']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Button']\"","webpack://@fof/upload/external \"flarum.core.compat['components/ExtensionPage']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Select']\"","webpack://@fof/upload/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/upload/external \"flarum.core.compat['components/UploadImageButton']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/Stream']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/saveSettings']\"","webpack://@fof/upload/external \"flarum.core.compat['utils/withAttr']\""],"names":["UploadPage","oninit","vnode","loading","fields","checkboxes","objects","watermarkPositions","center","left","top","right","bottom","settings","app","data","settingsPrefix","uploadMethodOptions","addPrefix","templateOptions","values","forEach","key","Stream","JSON","parse","defaultAdap","Object","keys","length","mimeTypes","adapter","template","newMimeType","regex","content","m","onsubmit","bind","translator","trans","value","maxFileSize","oninput","withAttr","type","min","map","mime","config","updateMimeTypeKey","Select","component","options","onchange","updateMimeTypeAdapter","getTemplateOptionsForInput","updateMimeTypeTemplate","Button","className","onclick","deleteMimeType","addMimeType","templateOptionsDescriptions","Switch","state","mustResize","resizeMaxWidth","disabled","whitelistedClientExtensions","addsWatermarks","watermarkPosition","UploadImageButton","name","disableHotlinkProtection","disableDownloadLogging","cdnUrl","adaptorItems","toArray","changed","items","ItemList","undefined","add","imgurClientId","qiniuKey","qiniuSecret","qiniuBucket","awsS3Key","awsS3Secret","awsS3Bucket","awsS3Region","awsS3Endpoint","awsS3UsePathStyleEndpoint","awsS3ACL","option","hasOwnProperty","children","push","description","fieldsCheck","some","checkboxesCheck","objectsCheck","stringify","e","preventDefault","alerts","dismiss","successAlert","saveSettings","then","show","Alert","redraw","ExtensionPage","components","initializers","extensionData","registerPage","registerPermission","icon","label","permission","allowGuest"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.js\");\n","export * from './src/admin';\r\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport Alert from 'flarum/components/Alert';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport UploadImageButton from 'flarum/components/UploadImageButton';\nimport withAttr from 'flarum/utils/withAttr';\nimport Stream from 'flarum/utils/Stream';\nimport ExtensionPage from 'flarum/components/ExtensionPage';\nimport ItemList from 'flarum/utils/ItemList';\n\n/* global m */\n\nexport default class UploadPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n        // whether we are saving the settings or not right now\n        this.loading = false;\n\n        // the fields we need to watch and to save\n        this.fields = [\n            // image\n            'resizeMaxWidth',\n            'cdnUrl',\n            'maxFileSize',\n            'whitelistedClientExtensions',\n            // watermark\n            'watermark',\n            'watermarkPosition',\n            // Imgur\n            'imgurClientId',\n            // AWS\n            'awsS3Key',\n            'awsS3Secret',\n            'awsS3Bucket',\n            'awsS3Region',\n            'awsS3Endpoint',\n            'awsS3ACL',\n            // QIniu\n            'qiniuKey',\n            'qiniuSecret',\n            'qiniuBucket',\n        ];\n\n        // the checkboxes we need to watch and to save.\n        this.checkboxes = ['mustResize', 'addsWatermarks', 'disableHotlinkProtection', 'disableDownloadLogging', 'awsS3UsePathStyleEndpoint'];\n\n        // fields that are objects\n        this.objects = ['mimeTypes'];\n\n        // watermark positions\n        this.watermarkPositions = {\n            'top-left': 'top-left',\n            'top-right': 'top-right',\n            'bottom-left': 'bottom-left',\n            'bottom-right': 'bottom-right',\n            center: 'center',\n            left: 'left',\n            top: 'top',\n            right: 'right',\n            bottom: 'bottom',\n        };\n\n        // get the saved settings from the database\n        const settings = app.data.settings;\n\n        // our package prefix (to be added to every field and checkbox in the setting table)\n        this.settingsPrefix = 'fof-upload';\n\n        // Options for the Upload methods dropdown menu.\n        this.uploadMethodOptions = settings[this.addPrefix('availableUploadMethods')] || {};\n        // Options for the Template dropdown menu.\n        this.templateOptions = settings[this.addPrefix('availableTemplates')] || {};\n        // Contains current values.\n        this.values = {};\n        // bind the values of the fields and checkboxes to the getter/setter functions\n        this.fields.forEach((key) => (this.values[key] = Stream(settings[this.addPrefix(key)])));\n        this.checkboxes.forEach((key) => (this.values[key] = Stream(settings[this.addPrefix(key)] === '1')));\n        this.objects.forEach(\n            (key) => (this.values[key] = settings[this.addPrefix(key)] ? Stream(JSON.parse(settings[this.addPrefix(key)])) : Stream())\n        );\n\n        // Set a sane default in case no mimeTypes have been configured yet.\n        // Since 'local' (or others) can now be disabled, pick the last entry in the object for default\n        this.defaultAdap = Object.keys(this.uploadMethodOptions)[Object.keys(this.uploadMethodOptions).length - 1];\n        this.values.mimeTypes() ||\n            (this.values.mimeTypes = Stream({\n                '^image\\\\/.*': {\n                    adapter: this.defaultAdap,\n                    template: 'image-preview',\n                },\n            }));\n\n        this.newMimeType = {\n            regex: Stream(''),\n            adapter: Stream(this.defaultAdap),\n            template: Stream('file'),\n        };\n    }\n\n    /**\n     * Show the actual ImageUploadPage.\n     *\n     * @returns {*}\n     */\n    content() {\n        return [\n            m('.UploadPage', [\n                m('.container', [\n                    m(\n                        'form',\n                        {\n                            onsubmit: this.onsubmit.bind(this),\n                        },\n                        [\n                            m('fieldset', [\n                                m('legend', app.translator.trans('fof-upload.admin.labels.preferences.title')),\n                                m('label', app.translator.trans('fof-upload.admin.labels.preferences.max_file_size')),\n                                m('input.FormControl', {\n                                    value: this.values.maxFileSize() || 2048,\n                                    oninput: withAttr('value', this.values.maxFileSize),\n                                    type: 'number',\n                                    min: '0',\n                                }),\n                                m('label', app.translator.trans('fof-upload.admin.labels.preferences.mime_types')),\n                                m(\n                                    '.MimeTypes--Container',\n                                    Object.keys(this.values.mimeTypes()).map((mime) => {\n                                        let config = this.values.mimeTypes()[mime];\n                                        // Compatibility for older versions.\n                                        if (typeof config !== 'object') {\n                                            config = {\n                                                adapter: config,\n                                                template: 'file',\n                                            };\n                                        }\n\n                                        return m('div', [\n                                            m('input.FormControl.MimeTypes', {\n                                                value: mime,\n                                                oninput: withAttr('value', this.updateMimeTypeKey.bind(this, mime)),\n                                            }),\n                                            Select.component({\n                                                options: this.uploadMethodOptions,\n                                                onchange: this.updateMimeTypeAdapter.bind(this, mime, config),\n                                                value: config.adapter || 'local',\n                                            }),\n                                            Select.component({\n                                                options: this.getTemplateOptionsForInput(),\n                                                onchange: this.updateMimeTypeTemplate.bind(this, mime, config),\n                                                value: config.template || 'local',\n                                            }),\n                                            Button.component(\n                                                {\n                                                    type: 'button',\n                                                    className: 'Button Button--warning',\n                                                    onclick: this.deleteMimeType.bind(this, mime),\n                                                },\n                                                'x'\n                                            ),\n                                        ]);\n                                    }),\n                                    m('br'),\n                                    m('div', [\n                                        m('input.FormControl.MimeTypes.add-MimeType-key', {\n                                            value: this.newMimeType.regex(),\n                                            oninput: withAttr('value', this.newMimeType.regex),\n                                        }),\n                                        Select.component({\n                                            options: this.uploadMethodOptions,\n                                            className: 'add-MimeType-value',\n                                            oninput: withAttr('value', this.newMimeType.adapter),\n                                            value: this.newMimeType.adapter(),\n                                        }),\n                                        Select.component({\n                                            options: this.getTemplateOptionsForInput(),\n                                            className: 'add-MimeType-value',\n                                            oninput: withAttr('value', this.newMimeType.template),\n                                            value: this.newMimeType.template(),\n                                        }),\n                                        Button.component(\n                                            {\n                                                type: 'button',\n                                                className: 'Button Button--warning',\n                                                onclick: this.addMimeType.bind(this),\n                                            },\n                                            '+'\n                                        ),\n                                    ])\n                                ),\n                                m('.helpText', app.translator.trans('fof-upload.admin.help_texts.mime_types')),\n                                m('.helpText', app.translator.trans('fof-upload.admin.help_texts.download_templates')),\n                                this.templateOptionsDescriptions(),\n                            ]),\n                            m('fieldset', [\n                                m('legend', app.translator.trans('fof-upload.admin.labels.resize.title')),\n                                m('.helpText', app.translator.trans('fof-upload.admin.help_texts.resize')),\n                                Switch.component(\n                                    {\n                                        state: this.values.mustResize() || false,\n                                        onchange: this.values.mustResize,\n                                    },\n                                    app.translator.trans('fof-upload.admin.labels.resize.toggle')\n                                ),\n                                m('label', app.translator.trans('fof-upload.admin.labels.resize.max_width')),\n                                m('input', {\n                                    className: 'FormControl',\n                                    value: this.values.resizeMaxWidth() || 100,\n                                    oninput: withAttr('value', this.values.resizeMaxWidth),\n                                    disabled: !this.values.mustResize(),\n                                    type: 'number',\n                                    min: '0',\n                                }),\n                            ]),\n                            m('fieldset', [\n                                m('legend', app.translator.trans('fof-upload.admin.labels.client_extension.title')),\n                                m('.helpText', app.translator.trans('fof-upload.admin.help_texts.client_extension')),\n                                m('input', {\n                                    className: 'FormControl',\n                                    value: this.values.whitelistedClientExtensions() || '',\n                                    oninput: withAttr('value', this.values.whitelistedClientExtensions),\n                                }),\n                            ]),\n                            m('fieldset', [\n                                m('legend', app.translator.trans('fof-upload.admin.labels.watermark.title')),\n                                m('.helpText', app.translator.trans('fof-upload.admin.help_texts.watermark')),\n                                Switch.component(\n                                    {\n                                        state: this.values.addsWatermarks() || false,\n                                        onchange: this.values.addsWatermarks,\n                                    },\n                                    app.translator.trans('fof-upload.admin.labels.watermark.toggle')\n                                ),\n                                m('label', app.translator.trans('fof-upload.admin.labels.watermark.position')),\n                                m('div', [\n                                    Select.component({\n                                        options: this.watermarkPositions,\n                                        onchange: this.values.watermarkPosition,\n                                        value: this.values.watermarkPosition() || 'bottom-right',\n                                    }),\n                                ]),\n                                m('label', {}, app.translator.trans('fof-upload.admin.labels.watermark.file')),\n                                UploadImageButton.component({\n                                    name: 'fof/watermark',\n                                }),\n                            ]),\n                            m('fieldset', [\n                                m('legend', app.translator.trans('fof-upload.admin.labels.disable-hotlink-protection.title')),\n                                m('.helpText', app.translator.trans('fof-upload.admin.help_texts.disable-hotlink-protection')),\n                                Switch.component(\n                                    {\n                                        state: this.values.disableHotlinkProtection() || false,\n                                        onchange: this.values.disableHotlinkProtection,\n                                    },\n                                    app.translator.trans('fof-upload.admin.labels.disable-hotlink-protection.toggle')\n                                ),\n                                m('legend', app.translator.trans('fof-upload.admin.labels.disable-download-logging.title')),\n                                m('.helpText', app.translator.trans('fof-upload.admin.help_texts.disable-download-logging')),\n                                Switch.component(\n                                    {\n                                        state: this.values.disableDownloadLogging() || false,\n                                        onchange: this.values.disableDownloadLogging,\n                                    },\n                                    app.translator.trans('fof-upload.admin.labels.disable-download-logging.toggle')\n                                ),\n                            ]),\n                            m('fieldset', [\n                                m('legend', app.translator.trans('fof-upload.admin.labels.local.title')),\n                                m('label', app.translator.trans('fof-upload.admin.labels.local.cdn_url')),\n                                m('input.FormControl', {\n                                    value: this.values.cdnUrl() || '',\n                                    oninput: withAttr('value', this.values.cdnUrl),\n                                }),\n                            ]),\n\n                            this.adaptorItems().toArray(),\n\n                            Button.component(\n                                {\n                                    type: 'submit',\n                                    className: 'Button Button--primary',\n                                    loading: this.loading,\n                                    disabled: !this.changed(),\n                                },\n                                app.translator.trans('fof-upload.admin.buttons.save')\n                            ),\n                        ]\n                    ),\n                ]),\n            ]),\n        ];\n    }\n\n    adaptorItems() {\n        const items = new ItemList();\n\n        if (this.uploadMethodOptions['imgur'] !== undefined) {\n            items.add(\n                'imgur',\n                m('.imgur', [\n                    m('fieldset', [\n                        m('legend', app.translator.trans('fof-upload.admin.labels.imgur.title')),\n                        m('label', app.translator.trans('fof-upload.admin.labels.imgur.client_id')),\n                        m('input.FormControl', {\n                            value: this.values.imgurClientId() || '',\n                            oninput: withAttr('value', this.values.imgurClientId),\n                        }),\n                    ]),\n                ])\n            );\n        }\n\n        if (this.uploadMethodOptions['qiniu'] !== undefined) {\n            items.add(\n                'qiniu',\n                m('.qiniu', [\n                    m('fieldset', [\n                        m('legend', app.translator.trans('fof-upload.admin.labels.qiniu.title')),\n                        m('label', app.translator.trans('fof-upload.admin.labels.qiniu.key')),\n                        m('input.FormControl', {\n                            value: this.values.qiniuKey() || '',\n                            oninput: withAttr('value', this.values.qiniuKey),\n                        }),\n                        m('label', {}, app.translator.trans('fof-upload.admin.labels.qiniu.secret')),\n                        m('input.FormControl', {\n                            value: this.values.qiniuSecret() || '',\n                            oninput: withAttr('value', this.values.qiniuSecret),\n                        }),\n                        m('label', {}, app.translator.trans('fof-upload.admin.labels.qiniu.bucket')),\n                        m('input.FormControl', {\n                            value: this.values.qiniuBucket() || '',\n                            oninput: withAttr('value', this.values.qiniuBucket),\n                        }),\n                    ]),\n                ])\n            );\n        }\n\n        if (this.uploadMethodOptions['aws-s3'] !== undefined) {\n            items.add(\n                'aws-s3',\n                m('.aws', [\n                    m('fieldset', [\n                        m('legend', app.translator.trans('fof-upload.admin.labels.aws-s3.title')),\n                        m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.key')),\n                        m('input.FormControl', {\n                            value: this.values.awsS3Key() || '',\n                            oninput: withAttr('value', this.values.awsS3Key),\n                        }),\n                        m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.secret')),\n                        m('input.FormControl', {\n                            value: this.values.awsS3Secret() || '',\n                            oninput: withAttr('value', this.values.awsS3Secret),\n                        }),\n                        m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.bucket')),\n                        m('input.FormControl', {\n                            value: this.values.awsS3Bucket() || '',\n                            oninput: withAttr('value', this.values.awsS3Bucket),\n                        }),\n                        m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.region')),\n                        m('input.FormControl', {\n                            value: this.values.awsS3Region() || '',\n                            oninput: withAttr('value', this.values.awsS3Region),\n                        }),\n                    ]),\n                    m('fieldset', [\n                        m('legend', app.translator.trans('fof-upload.admin.labels.aws-s3.advanced_title')),\n                        m('.helpText', app.translator.trans('fof-upload.admin.help_texts.s3_compatible_storage')),\n                        m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.endpoint')),\n                        m('input.FormControl', {\n                            value: this.values.awsS3Endpoint() || '',\n                            oninput: withAttr('value', this.values.awsS3Endpoint),\n                        }),\n                        Switch.component(\n                            {\n                                state: this.values.awsS3UsePathStyleEndpoint() || false,\n                                onchange: this.values.awsS3UsePathStyleEndpoint,\n                            },\n                            app.translator.trans('fof-upload.admin.labels.aws-s3.use_path_style_endpoint')\n                        ),\n                        m('label', app.translator.trans('fof-upload.admin.labels.aws-s3.acl')),\n                        m('input.FormControl', {\n                            value: this.values.awsS3ACL() || '',\n                            oninput: withAttr('value', this.values.awsS3ACL),\n                        }),\n                        m('.helpText', app.translator.trans('fof-upload.admin.help_texts.s3_acl')),\n                    ]),\n                ])\n            );\n        }\n\n        return items;\n    }\n\n    getTemplateOptionsForInput() {\n        const options = {};\n\n        for (let option in this.templateOptions) {\n            if (!this.templateOptions.hasOwnProperty(option)) {\n                continue;\n            }\n\n            options[option] = this.templateOptions[option].name;\n        }\n\n        return options;\n    }\n\n    updateMimeTypeKey(mime, value) {\n        this.values.mimeTypes()[value] = this.values.mimeTypes()[mime];\n\n        this.deleteMimeType(mime);\n    }\n\n    updateMimeTypeAdapter(mime, config, value) {\n        config.adapter = value;\n        this.values.mimeTypes()[mime] = config;\n    }\n\n    updateMimeTypeTemplate(mime, config, value) {\n        config.template = value;\n        this.values.mimeTypes()[mime] = config;\n    }\n\n    deleteMimeType(mime) {\n        delete this.values.mimeTypes()[mime];\n    }\n\n    templateOptionsDescriptions() {\n        const children = [];\n\n        for (let template in this.templateOptions) {\n            if (!this.templateOptions.hasOwnProperty(template)) {\n                continue;\n            }\n\n            children.push(m('li', this.templateOptions[template].name + ': ' + this.templateOptions[template].description));\n        }\n\n        return m('ul', children);\n    }\n\n    addMimeType() {\n        this.values.mimeTypes()[this.newMimeType.regex()] = {\n            adapter: this.newMimeType.adapter(),\n            template: this.newMimeType.template(),\n        };\n\n        this.newMimeType.regex('');\n        this.newMimeType.adapter('local');\n        this.newMimeType.template('file');\n    }\n\n    /**\n     * Checks if the values of the fields and checkboxes are different from\n     * the ones stored in the database\n     *\n     * @returns boolean\n     */\n    changed() {\n        const fieldsCheck = this.fields.some((key) => this.values[key]() !== app.data.settings[this.addPrefix(key)]);\n        const checkboxesCheck = this.checkboxes.some((key) => this.values[key]() !== (app.data.settings[this.addPrefix(key)] === '1'));\n        const objectsCheck = this.objects.some((key) => JSON.stringify(this.values[key]()) !== app.data.settings[this.addPrefix(key)]);\n\n        return fieldsCheck || checkboxesCheck || objectsCheck;\n    }\n\n    /**\n     * Saves the settings to the database and redraw the page\n     *\n     * @param e\n     */\n    onsubmit(e) {\n        // prevent the usual form submit behaviour\n        e.preventDefault();\n\n        // if the page is already saving, do nothing\n        if (this.loading) return;\n\n        // prevents multiple savings\n        this.loading = true;\n\n        // remove previous success popup\n        app.alerts.dismiss(this.successAlert);\n\n        const settings = {};\n\n        // gets all the values from the form\n        this.fields.forEach((key) => (settings[this.addPrefix(key)] = this.values[key]()));\n        this.checkboxes.forEach((key) => (settings[this.addPrefix(key)] = this.values[key]()));\n        this.objects.forEach((key) => (settings[this.addPrefix(key)] = JSON.stringify(this.values[key]())));\n\n        // actually saves everything in the database\n        saveSettings(settings)\n            .then(() => {\n                // on success, show popup\n                this.successAlert = app.alerts.show(Alert, { type: 'success' }, app.translator.trans('core.admin.basics.saved_message'));\n            })\n            .catch(() => {})\n            .then(() => {\n                // return to the initial state and redraw the page\n                this.loading = false;\n                m.redraw();\n            });\n    }\n\n    /**\n     * Adds the prefix `this.settingsPrefix` at the beginning of `key`\n     *\n     * @returns string\n     */\n    addPrefix(key) {\n        return this.settingsPrefix + '.' + key;\n    }\n}\n","import UploadPage from './UploadPage';\n\nexport const components = {\n    UploadPage,\n};\n","import app from 'flarum/app';\nimport UploadPage from './components/UploadPage';\n\nexport * from './components';\n\napp.initializers.add('fof-upload', (app) => {\n    app.extensionData\n        .for('fof-upload')\n        .registerPage(UploadPage)\n        .registerPermission(\n            {\n                icon: 'far fa-file',\n                label: app.translator.trans('fof-upload.admin.permissions.upload_label'),\n                permission: 'fof-upload.upload',\n            },\n            'start',\n            50\n        )\n        .registerPermission(\n            {\n                icon: 'fas fa-download',\n                label: app.translator.trans('fof-upload.admin.permissions.download_label'),\n                permission: 'fof-upload.download',\n                allowGuest: true,\n            },\n            'view',\n            50\n        );\n});\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/ExtensionPage'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/UploadImageButton'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/Stream'];","module.exports = flarum.core.compat['utils/saveSettings'];","module.exports = flarum.core.compat['utils/withAttr'];"],"sourceRoot":""}