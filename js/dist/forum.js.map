{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,yDCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAzC,SAASC,EAAgBhB,EAAGiB,GAMzC,OALAD,EAAkBf,OAAOiB,gBAAkB,SAAyBlB,EAAGiB,GAErE,OADAjB,EAAEmB,UAAYF,EACPjB,GAGFgB,EAAgBhB,EAAGiB,GCLb,SAASG,EAAeC,EAAUC,GAC/CD,EAASd,UAAYN,OAAOsB,OAAOD,EAAWf,WAC9Cc,EAASd,UAAUiB,YAAcH,EACjCH,EAAeG,EAAUC,GCJ3B,MAAM,EAA+BT,OAAOC,KAAKC,OAAO,gB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sB,ICGnCU,EAAAA,SAAAA,G,4EAgBnBC,YAAA,WACE,MAAO,gBAAkBC,KAAKC,OAAS,IAAMD,KAAKE,KAAKC,GAAK,K,EAjB3CL,C,MAAaM,EAAAA,CAAMC,IAAO,CAC7CC,SAAUD,IAAAA,UAAgB,YAC1BE,KAAMF,IAAAA,UAAgB,QACtBG,IAAKH,IAAAA,UAAgB,OACrBI,KAAMJ,IAAAA,UAAgB,QACtBK,KAAML,IAAAA,UAAgB,QACtBM,UAAWN,IAAAA,UAAgB,aAC3BO,UAAWP,IAAAA,UAAgB,aAC3BQ,KAAMR,IAAAA,UAAgB,QACtBS,IAAKT,IAAAA,UAAgB,OACrBU,OAAQV,IAAAA,UAAgB,UACxBW,OAAQX,IAAAA,UAAgB,aCZLY,EAAAA,WACnB,aACEjB,KAAKkB,KAAO,KAEZlB,KAAKmB,MAAQ,GAEbnB,KAAKoB,aAAc,EAEnBpB,KAAKqB,SAAU,E,2BAQjBC,QAAA,SAAQJ,GAEFA,IAASlB,KAAKkB,OAGlBlB,KAAKkB,KAAOA,EAGZlB,KAAKmB,MAAQ,GAGbnB,KAAKuB,gB,EAQPA,YAAA,SAAYC,GACV,QADsB,IAAZA,IAAAA,EAAS,GACdxB,KAAKkB,KAIV,OAFAlB,KAAKqB,SAAU,EAERI,IAAAA,MAAAA,KACC,cAAe,CACnBC,OAAQ,CACNR,KAAMlB,KAAKkB,KAAKf,MAElBwB,KAAM,CACJH,OAAAA,KAGHI,KAAK5B,KAAK6B,aAAaC,KAAK9B,Q,EAMjC+B,SAAA,WACE/B,KAAKqB,SAAU,EAEfrB,KAAKuB,YAAYvB,KAAKmB,MAAMa,QAAQJ,KAAK5B,KAAK6B,aAAaC,KAAK9B,Q,EAMlE6B,aAAA,SAAaI,GAAS,MAQpB,OAPA,EAAAjC,KAAKmB,OAAMe,KAAX,QAAmBD,GAEnBjC,KAAKqB,SAAU,EACfrB,KAAKoB,cAAgBa,EAAQE,QAAQC,SAAWH,EAAQE,QAAQC,MAAMC,KAEtEC,EAAEC,SAEKN,G,EAMTO,UAAA,SAAUrB,GACkB,MAAtBsB,MAAMC,QAAQvB,IAChB,EAAAnB,KAAKmB,OAAMwB,QAAX,QAAsBxB,GAEtBnB,KAAKmB,MAAMwB,QAAQxB,I,EAOvByB,SAAA,WACE,OAAO5C,KAAKmB,MAAMa,OAAS,G,EAM7Ba,UAAA,WACE,OAAO7C,KAAKqB,S,EAMdyB,eAAA,WACE,OAAO9C,KAAKoB,a,EAMd2B,MAAA,WACE,OAAQ/C,KAAK4C,aAAe5C,KAAK6C,a,EA/GhB5B,GCFrB,MAAM,EAA+B/B,OAAOC,KAAKC,OAAO,yB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCOnC4D,EAAAA,SAAAA,G,oFACnBC,OAAA,SAAOC,GAAO,WACZ,YAAMD,OAAN,UAAaC,GAEblD,KAAKmD,MAAMC,SAASC,GAAG,YAAY,WAEjC,EAAKC,EAAE,QAAQ,GAAGC,QAGlBjB,EAAEC,YAGJvC,KAAKwD,oBAAsBN,EAAMC,MAAMK,sBAAuB,G,EAGhEC,KAAA,WACE,IAAMC,EAAa1D,KAAKmD,MAAMC,SAASO,UACnClC,IAAAA,WAAAA,MAAqB,mCACrBA,IAAAA,WAAAA,MAAqB,mCAEzB,OACE,EAAC,IAAD,CAASmC,KAAMF,GACb,EAAC,IAAD,CACEG,UAAWC,GAAAA,CAAU,CACnB,SACA,UACA,qBACC9D,KAAKwD,sBAAwBxD,KAAKmD,MAAMC,SAASO,WAAa,gBAC9D3D,KAAKwD,sBAAwBxD,KAAKmD,MAAMC,SAASO,WAAa,eAC/D3D,KAAKmD,MAAMC,SAASO,WAAa,cAEnCI,MAAO/D,KAAKmD,MAAMC,SAASO,WAAa,qBACxCK,QAAShE,KAAKiE,oBAAoBnC,KAAK9B,MACvCkE,SAAUlE,KAAKmD,MAAMe,UAEpBlE,KAAKmD,MAAMC,SAASO,WAAa,EAAC,IAAD,CAAkBjD,KAAK,QAAQyD,QAAQ,SAASN,UAAU,iBAC1F7D,KAAKwD,qBAAuBxD,KAAKmD,MAAMC,SAASO,YAAc,UAAME,UAAU,gBAAgBH,GAChG,cACE,WAAOjD,KAAK,OAAO2D,UAAU,EAAMC,SAAUrE,KAAKsE,QAAQxC,KAAK9B,Y,EAYzEsE,QAAA,SAAQC,GAEN,IAAMpD,EAAQnB,KAAKsD,EAAE,SAAS3E,KAAK,SAEd,IAAjBwC,EAAMa,QAOVhC,KAAKmD,MAAMC,SAASoB,OAAOrD,GAAQnB,KAAKwD,sB,EAQ1CS,oBAAA,SAAoBM,GAGlBvE,KAAKsD,EAAE,SAASmB,S,EAxECzB,CAAqB0B,KCPrBC,EAAAA,WACnB,WAAYH,EAAQI,GAClB5E,KAAKwE,OAASA,EACdxE,KAAK4E,gBAAkBA,EAGvB5E,KAAK6E,SAAW,GAEX7E,KAAK8E,yBAIV9E,KAAK4E,gBAAgBG,iBAAiB,WAAa/E,KAAK6E,SAAL,GAAmB7E,KAAA,GAAQ8B,KAAK9B,OAEnFA,KAAK4E,gBAAgBG,iBAAiB,YAAc/E,KAAK6E,SAASG,IAAMhF,KAAKgF,IAAIlD,KAAK9B,OACtFA,KAAK4E,gBAAgBG,iBAAiB,UAAW/E,KAAK6E,SAASG,KAE/DhF,KAAK4E,gBAAgBG,iBAAiB,OAAS/E,KAAK6E,SAASI,SAAWjF,KAAKiF,SAASnD,KAAK9B,Q,2BAG7F8E,qBAAA,WAEE,IAAMI,EAAMC,SAASC,cAAc,OAEnC,OAAQ,cAAeF,GAAQ,gBAAiBA,GAAO,WAAYA,IAAS,aAAcG,QAAU,eAAgBA,Q,EAGtHC,OAAA,WAEOtF,KAAK6E,SAAL,KAIL7E,KAAK4E,gBAAgBW,oBAAoB,WAAYvF,KAAK6E,SAAL,IAErD7E,KAAK4E,gBAAgBW,oBAAoB,YAAavF,KAAK6E,SAASG,KACpEhF,KAAK4E,gBAAgBW,oBAAoB,UAAWvF,KAAK6E,SAASG,KAElEhF,KAAK4E,gBAAgBW,oBAAoB,OAAQvF,KAAK6E,SAASI,Y,EAGjEO,UAAA,SAAUC,GAGR,GAAIA,EAAMC,aAAaC,MACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMC,aAAaC,MAAM3D,OAAQ4D,IACnD,GAAyC,SAArCH,EAAMC,aAAaC,MAAMC,GAAGC,KAC9B,OAAO,EAKb,OAAO,G,KAGT,SAAGJ,GACGzF,KAAKwF,UAAUC,KAInBA,EAAMK,iBAED9F,KAAK+F,OACR/F,KAAK4E,gBAAgBd,UAAUkC,IAAI,uBACnChG,KAAK+F,MAAO,K,EAIhBf,IAAA,SAAIS,GACEzF,KAAKwF,UAAUC,KAInBA,EAAMK,iBAEF9F,KAAK+F,OACP/F,KAAK4E,gBAAgBd,UAAUmC,OAAO,uBACtCjG,KAAK+F,MAAO,K,EAIhBd,SAAA,SAASQ,GACHzF,KAAKwF,UAAUC,KAInBA,EAAMK,iBAEN9F,KAAKwE,OAAOiB,EAAMC,aAAavE,OAE/BnB,KAAK4E,gBAAgBd,UAAUmC,OAAO,yB,EA1FrBtB,GCAAuB,EAAAA,WACnB,WAAY1B,EAAQ2B,GAClBnG,KAAKwE,OAASA,EAGd2B,EAAQpB,iBAAiB,QAAS/E,KAAKoG,MAAMtE,KAAK9B,O,mBAGpDoG,MAAA,SAAM7B,GACJ,GAAIA,EAAE8B,eAAiB9B,EAAE8B,cAAcV,MAAO,CAK5C,IAJA,IAAMA,EAAQpB,EAAE8B,cAAcV,MAExBxE,EAAQ,GAELyE,EAAI,EAAGA,EAAID,EAAM3D,OAAQ4D,KACQ,IAApCD,EAAMC,GAAGnF,KAAK6F,QAAQ,UACxBnF,EAAMe,KAAKyD,EAAMC,GAAGW,aAIpBpF,EAAMa,OAAS,IACjBuC,EAAEuB,iBAEF9F,KAAKwE,OAAOrD,M,EAvBC+E,GCEAM,EAAAA,WACnB,aACExG,KAAKyG,UAAY,CACfC,QAAS,GACTC,QAAS,GACThD,UAAW,GACXiD,SAAU,IAEZ5G,KAAK2D,WAAY,E,2BAGnBN,GAAA,SAAG5C,EAAMoG,GACP7G,KAAKyG,UAAUhG,GAAMyB,KAAK2E,I,EAG5BC,SAAA,SAASrG,EAAMsG,GACb/G,KAAKyG,UAAUhG,GAAMuG,SAAQ,SAACH,GAAD,OAAcA,EAASE,O,EAGtDvC,OAAA,SAAOrD,EAAO8F,GAAkB,oBAAlBA,IAAAA,GAAY,GACxBjH,KAAK2D,WAAY,EACjB3D,KAAK8G,SAAS,YAAa3F,GAE3BmB,EAAEC,SAIF,IAFA,IAAM2E,EAAO,IAAIC,SAERvB,EAAI,EAAGA,EAAIzE,EAAMa,OAAQ4D,IAChCsB,EAAKE,OAAO,UAAWjG,EAAMyE,IAI/B,OAAOnE,IAAAA,QACI,CACP4F,OAAQ,OACR7G,IAAKiB,IAAAA,MAAAA,UAAoB,UAAY,cAErC6F,UAAW,SAACC,GAAD,OAASA,GACpBL,KAAAA,IAEDtF,MAAK,SAAC4F,GAAD,OAAY,EAAKZ,SAASY,EAAQP,MARnC,OASE,SAACQ,GAIN,MAHA,EAAK9D,WAAY,EACjBrB,EAAEC,SAEIkF,M,EAIZb,SAAA,SAASY,EAAQP,GAAmB,oBAAnBA,IAAAA,GAAY,GAC3BjH,KAAK2D,WAAY,EAEjB6D,EAAOtH,KAAK8G,SAAQ,SAACU,GACnB,IAAMC,EAAUlG,IAAAA,MAAAA,WAAqBiG,GAGrCjG,IAAAA,cAAAA,UAA4BkG,GAG5B,EAAKb,SAAS,UAAW,CACvBY,KAAMC,EACNV,UAAAA,OAIJjH,KAAK8G,SAAS,a,EAjEGN,GCFrB,MAAM,EAA+BtH,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAlDwI,EAAQ,CAAC,YAAa,YAAa,aAAc,gBAAiB,aAClEC,EAAU,CAAC,kBAAmB,8BAA+B,mBAAoB,sBAAuB,gCACxGC,EAAO,CAAC,YAAa,WAAY,kBAAmB,mBAAoB,sBAAuB,kBAAmB,2BAClHC,EAAO,CACX,wBACA,qBACA,0EACA,mBCKmBC,EAAAA,SAAAA,G,oFACnB/E,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAGbzB,IAAAA,cAAAA,QAA0ByB,EAAMC,MAAMjC,MAAQO,IAAAA,QAAAA,MAE9CzB,KAAKiI,QAAU/E,EAAMC,MAAM+E,WAC3BlI,KAAKmI,iBAAmBjF,EAAMC,MAAMgF,kBAAoB,KACxDnI,KAAKoI,gBAAkBpI,KAAKmD,MAAMiF,kBAAmB,EAIrDpI,KAAKqI,iBAAmB,GAKxBrI,KAAKkB,KAAOO,IAAAA,cAAAA,M,EAGdgC,KAAA,WAAO,WAIC6E,EAAQ7G,IAAAA,cAEd,OACE,SAAKoC,UAAU,uBAAuB,YAAU,UAE7CyE,EAAMzF,aAAsC,IAAvByF,EAAMnH,MAAMa,QAChC,SAAK6B,UAAW,sBACbpC,IAAAA,WAAAA,MAAqB,sCAEtB,EAAC,IAAD,OAKHzB,KAAKiI,SAAWK,EAAMvF,SACrB,OAAGc,UAAU,oBACX,OAAGA,UAAU,kDACZpC,IAAAA,WAAAA,MAAA,2CAAgF,UAAjBA,IAAAA,SAA2B,UAAY,YAKzGzB,KAAKiI,SAAWK,EAAMvF,SACtB,SAAKc,UAAU,eACb,OAAGA,UAAU,oBAAoBpC,IAAAA,WAAAA,MAAqB,sCAK1D,YACG6G,EAAMnH,MAAMoH,KAAI,SAACb,GAChB,IDlDuBc,ECkDjBC,GDlDiBD,ECkDKd,EAAKjH,ODhDvCmH,EAAMc,SAASF,GACV,QAGAA,EAASE,SAAS,UAClB,oBAGAF,EAASE,SAAS,UAClB,oBAGAb,EAAQvB,QAAQkC,IAAa,EAC7B,sBAGa,oBAAbA,EACA,kBAGAT,EAAKzB,QAAQkC,IAAa,EAC1B,mBAGAA,EAASE,SAAS,UAClB,oBAGAZ,EAAKxB,QAAQkC,IAAa,EAC1B,mBAGF,eCiBSG,GAAiB,EAAKR,kBAAmB,EAAKS,aAAalB,GAE3DmB,EAAiB/E,GAAAA,CAAU,CAC/B,WAEa,UAAb2E,GAAwB,sBAExB,EAAKtF,MAAM2F,eAAiB,EAAK3F,MAAM2F,cAAcxC,QAAQoB,EAAKvH,OAAS,GAAK,sBAO5E4I,EAAWrB,EAAKpH,WAEhB0I,EAAe,EAAKX,iBAAiBK,SAAShB,EAAK7G,QAEzD,OACE,QAAI,YAAWmI,GACZvH,IAAAA,QAAAA,OAAqB,EAAKP,OAASO,IAAAA,QAAAA,MAAoBA,IAAAA,QAAAA,KAAAA,6BACtD,EAAC,IAAD,CACEoC,UAAU,sCACVE,KAAK,mBACL,aAAYtC,IAAAA,WAAAA,MAAqB,oDAAqD,CAAEsH,SAAAA,IACxF7E,SAAU8E,EACVhF,QAAS,EAAKiF,SAASnH,KAAK,EAAM4F,KAItC,YACE7D,UAAWgF,EACX7E,QAAS,kBAAM,EAAKkF,YAAYxB,IAChCxD,UAAWyE,GAAkBK,EAC7B,aAAYG,GAAAA,CAAY1H,IAAAA,WAAAA,MAAqB,oDAAqD,CAAEsH,SAAAA,MAEpG,gBACgB,UAAbN,EACC,SACEW,IAAK1B,EAAKlH,MACVqD,UAAU,yBACVwF,WAAW,EAOXC,IAAI,KAGN,UACEzF,UAAU,gBAOV0F,KAAK,gBAEL,OAAG1F,UAAS,SAAW4E,KAI3B,gBAAY5E,UAAU,iBAAiBkF,GAEtCC,GACC,UAAMQ,MAAM,mBAAmBD,KAAK,SAAS,aAAY9H,IAAAA,WAAAA,MAAqB,iDAC5E,EAAC,IAAD,cAWf6G,EAAMxF,kBACL,SAAKe,UAAW,uBACd,EAAC,IAAD,CAAQA,UAAW,yBAA0BK,SAAUoE,EAAMzF,YAAaxB,QAASiH,EAAMzF,YAAamB,QAAS,kBAAMsE,EAAMvG,aACxHN,IAAAA,WAAAA,MAAqB,sD,EAalCyH,YAAA,SAAYxB,GAEN1H,KAAKmD,MAAMsG,aACbzJ,KAAKmD,MAAMsG,aAAa/B,GAKtB1H,KAAKmD,MAAMiF,iBACb/C,OAAOqE,KAAKhC,EAAKlH,Q,EAUrBoI,aAAA,SAAalB,GACX,IAAMc,EAAWd,EAAKjH,OAGtB,OAAIgC,MAAMC,QAAQ1C,KAAKmI,kBACdnI,KAAKmI,iBAAiB7B,QAAQkC,IAAa,EAIjB,UAA1BxI,KAAKmI,iBACLK,EAASE,SAAS,UAIQ,UAA1B1I,KAAKmI,iBACLK,EAASE,SAAS,UAIQ,UAA1B1I,KAAKmI,kBACLK,EAASE,SAAS,W,EAc7BO,SAAA,SAASvB,GAAM,WAIP7G,EAAO6G,EAAK7G,OAElB,IAAIb,KAAKqI,iBAAiBK,SAAS7H,GAQnC,GANAb,KAAKqI,iBAAiBnG,KAAKrB,GAEP8I,QAClBR,GAAAA,CAAY1H,IAAAA,WAAAA,MAAqB,yDAA0D,CAAEsH,SAAUrB,EAAKpH,eAI5GmB,IAAAA,QACW,CACP4F,OAAQ,QACR7G,IAAQiB,IAAAA,MAAAA,UAAoB,UAAzB,mBACHyF,KAAM,CAAErG,KAAAA,KAETe,MAAK,WACJH,IAAAA,OAAAA,KAAgBmI,IAAO,CAAEnJ,KAAM,WAAagB,IAAAA,WAAAA,MAAqB,yDAPrE,OASS,WACLA,IAAAA,OAAAA,KACEmI,IACA,CAAEnJ,KAAM,SACRgB,IAAAA,WAAAA,MAAqB,iDAAkD,CAAEsH,SAAUrB,EAAKqB,iBAG3FnH,MAAK,WAKJ,IAAM0G,EAAQ7G,IAAAA,cAERoI,EAAQvB,EAAMnH,MAAM2I,WAAU,SAACpC,GAAD,OAAU7G,IAAS6G,EAAK7G,UAC5DyH,EAAMnH,MAAM4I,OAAOF,EAAO,GAG1B,IAAMjE,EAAI,EAAKyC,iBAAiB/B,QAAQzF,GACxC,EAAKwH,iBAAiB0B,OAAOnE,EAAG,UAE/B,CAEL,IAAMA,EAAI5F,KAAKqI,iBAAiB/B,QAAQzF,GACxCb,KAAKqI,iBAAiB0B,OAAOnE,EAAG,K,EA9PjBoC,CAAqBtD,KCNrBsF,EAAAA,SAAAA,G,oFACnB/G,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAGblD,KAAKoD,SAAWF,EAAMC,MAAMC,SAG5BpD,KAAK8I,cAAgB,GAGrB9I,KAAKiK,YAAc/G,EAAMC,MAAM8G,cAAe,EAG9CjK,KAAKmI,iBAAmBjF,EAAMC,MAAMgF,kBAAoB,KAGxDnI,KAAKkK,SAAW,KAGhBlK,KAAKmK,Y,EAGPtG,UAAA,WACE,MAAO,uC,EAMTuG,SAAA,SAASlH,GAAO,WACd,YAAMkH,SAAN,UAAelH,GAEflD,KAAKkK,SAAW,IAAIvF,GAAY,SAACxD,GAAD,OAAW,EAAKiC,SAASoB,OAAOrD,GAAO,KAAQnB,KAAKsD,IAAI+G,KAAK,kBAAkB,K,EAMjHC,SAAA,WACMtK,KAAKkK,UACPlK,KAAKkK,SAAS5E,U,EAIlB7B,KAAA,WACE,IAAM8G,EAAYvK,KAAK8I,cAAc9G,OAErC,OACE,SAAK6B,UAAS,sBAAwB7D,KAAK6D,aACzC,SAAKA,UAAU,iBACb,SAAKA,UAAU,qCACb,EAACb,EAAD,CAAcI,SAAUpD,KAAKoD,SAAUc,SAAUzC,IAAI+I,cAAc3H,YAAaW,qBAAmB,KAGrG,SAAKK,UAAU,qBACb,SAAKA,UAAU,6BACb,OAAGA,UAAU,4BAEZpC,IAAIgJ,WAAWC,MAAM,kDAI1B,SAAK7G,UAAU,gBACb,QAAIA,UAAU,2CAA2CpC,IAAIgJ,WAAWC,MAAM,oCAG/E1K,KAAK2K,YACJ,SAAK9G,UAAU,eACb,EAAC+F,MAAU5J,KAAK2K,aAIpB,SAAK9G,UAAU,cACb,EAACmE,EAAD,CACE9G,KAAMlB,KAAKmD,MAAMjC,KACjBgH,YAAU,EACVuB,aAAczJ,KAAKyJ,aAAa3H,KAAK9B,MACrC8I,cAAe9I,KAAK8I,cACpBX,iBAAkBnI,KAAKmI,oBAI3B,SAAKtE,UAAU,gBACb,EAAC,IAAD,CAAQG,QAAShE,KAAK4K,KAAK9I,KAAK9B,MAAO6D,UAAU,UAC9CpC,IAAIgJ,WAAWC,MAAM,oCAGxB,EAAC,IAAD,CACE1G,QAAShE,KAAK6K,SAAS/I,KAAK9B,MAC5BkE,SAAwC,IAA9BlE,KAAK8I,cAAc9G,SAAkBhC,KAAKiK,aAAejK,KAAK8I,cAAc9G,OAAS,EAC/F6B,UAAU,0BAETpC,IAAIgJ,WAAWC,MAAM,mDAAoD,CAAEH,UAAAA,S,EAaxFd,aAAA,SAAa/B,GACX,IAAMoD,EAAe9K,KAAK8I,cAAcxC,QAAQoB,EAAKvH,MAEjD2K,GAAgB,EAClB9K,KAAK8I,cAAciB,OAAOe,EAAc,GAEpC9K,KAAKiK,YACPjK,KAAK8I,cAAc5G,KAAKwF,EAAKvH,MAE7BH,KAAK8I,cAAgB,CAACpB,EAAKvH,O,EAQjCgK,SAAA,WAAW,WACTnK,KAAKoD,SAASC,GAAG,WAAW,YAAc,IAAXqE,EAAW,EAAXA,KACzB,EAAKuC,YACP,EAAKnB,cAAc5G,KAAKwF,EAAKvH,MAE7B,EAAK2I,cAAgB,CAACpB,EAAKvH,U,EAQjC0K,SAAA,WACE7K,KAAK4K,OAGD5K,KAAKmD,MAAM0H,SACb7K,KAAKmD,MAAM0H,SAAS7K,KAAK8I,eAM3B9I,KAAK8I,cAAcP,KAAI,SAACwC,GACtB,IAAMrD,EAAOjG,IAAIuJ,MAAMC,QAAQ,QAASF,GAExCtJ,IAAIyJ,SAASC,OAAOC,eAAe1D,EAAK1G,SAAW,MAAM,O,EAtJ1CgJ,CAAyBqB,KCAzBC,EAAAA,SAAAA,G,oFACnB7H,KAAA,WACE,OACE,EAAC,IAAD,CAASG,KAAMnC,IAAAA,WAAAA,MAAqB,mCACjC8J,IAAAA,UAAiB,CAChB1H,UAAW,wCACXG,QAAShE,KAAKwL,yBAAyB1J,KAAK9B,MAC5C+D,KAAM,yB,EAWdyH,yBAAA,SAAyBjH,GACvBA,EAAEuB,iBAGFrE,IAAAA,MAAAA,KAAeuI,EAAkB,CAC/B5G,SAAUpD,KAAKmD,MAAMC,Y,EAvBNkI,CAA0B5G,KCF1B+G,EAAAA,SAAAA,G,oFACnBxI,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAEblD,KAAKkB,KAAO,KAEZlB,KAAK0L,SAASpJ,EAAEqJ,MAAMC,MAAM,c,EAG9BC,QAAA,WACE,OAAIpK,IAAAA,QAAAA,OAAqBA,IAAAA,QAAAA,KAAAA,0BAA6CzB,KAAKkB,OAASO,IAAAA,QAAAA,MAEhFzB,KAAKkB,MACL8G,EAAa8D,UAAU,CACrB5K,KAAMlB,KAAKkB,KACXgH,YAAY,EACZE,iBAAiB,IAId,M,EAIX2D,KAAA,SAAK7K,GACH,YAAM6K,KAAN,UAAW7K,GACXlB,KAAKkB,KAAOA,G,EA1BKuK,CAAwBO,KCJ7C,MAAM,EAA+B9M,OAAOC,KAAKC,OAAO,sB,aCO3C6M,EAAa,CACxBtH,YAAAA,EACA2G,kBAAAA,EACAtB,iBAAAA,EACAhC,aAAAA,EACAxB,SAAAA,EACAxD,aAAAA,GCEFvB,IAAAA,aAAAA,IAAqB,cAAc,WACjCyK,IAAAA,UAAAA,uBAAwC7L,IAAAA,UAAgB,qCACxD6L,IAAAA,UAAAA,yBAA0C7L,IAAAA,UAAgB,uCAC1D6L,IAAAA,UAAAA,mBAAoC7L,IAAAA,UAAgB,iCACpD6L,IAAAA,UAAAA,eAAgC7L,IAAAA,UAAgB,8BCThD8L,EAAAA,EAAAA,QAAOC,IAAAA,UAAsB,UAAU,WACrCpM,KAAKoD,SAAW,IAAIoD,MAEtB2F,EAAAA,EAAAA,QAAOC,IAAAA,UAAsB,gBAAgB,SAAUzG,GACrD,GAAKlE,IAAAA,MAAAA,UAAoB,wBAAzB,CAEA,IAAM4K,EAA0B5K,IAAAA,MAAAA,UAAoB,sCAGpB,SAA5B4K,GAAkE,cAA5BA,GACxC1G,EAAMK,IACJ,mBACAsF,EAAkBQ,UAAU,CAC1B1I,SAAUpD,KAAKoD,YAMW,SAA5BiJ,GAAkE,eAA5BA,GACxC1G,EAAMK,IACJ,aACAhD,EAAa8I,UAAU,CACrB1I,SAAUpD,KAAKoD,iBAMvB+I,EAAAA,EAAAA,QAAOC,IAAAA,UAAsB,YAAY,SAAUE,EAAIpJ,GAAO,WACvDzB,IAAAA,MAAAA,UAAoB,0BAEzBzB,KAAKoD,SAASC,GAAG,WAAW,YAAyB,IAAtBqE,EAAsB,EAAtBA,KAC7B,GADmD,EAAhBT,YAGnC,EAAK9D,MAAM+H,SAASC,OAAOC,eAAe1D,EAAK1G,SAAW,MAAM,GAK9B,mBAAvB,EAAKmC,MAAMoJ,SAAwB,CAI5C,IAAMC,EAAuB/K,IAAAA,SAAAA,aAE7BA,IAAAA,SAAAA,aAA4B,kBAAM,GAElC,EAAK0B,MAAMoJ,UAEX9K,IAAAA,SAAAA,aAA4B+K,MAIhCxM,KAAKyM,YAAc,IAAI9H,GAAY,SAACxD,GAAD,OAAW,EAAKiC,SAASoB,OAAOrD,KAAQnB,KAAKsD,IAAIoJ,QAAQ,aAAa,IAEzG,IAAIxG,GAAe,SAAC/E,GAAD,OAAW,EAAKiC,SAASoB,OAAOrD,KAAQnB,KAAKsD,EAAE,sBAAsB,SAG1F6I,EAAAA,EAAAA,QAAOC,IAAAA,UAAsB,YAAY,SAAUE,EAAIpJ,GAChDzB,IAAAA,MAAAA,UAAoB,yBAEzBzB,KAAKyM,YAAYnH,aCjEnB6G,EAAAA,EAAAA,QAAOQ,IAAAA,UAAgB,YAAY,WAAY,WAC7C3M,KAAKsD,EAAE,mCACJsJ,OAAO,SACPvJ,GAAG,SAAS,SAACkB,GAIZ,GAHAA,EAAEuB,iBACFvB,EAAEsI,kBAEGpL,IAAAA,MAAAA,UAAoB,0BAAzB,CAKA,IAAIjB,EAAMiB,IAAAA,MAAAA,UAAoB,UAAY,gBAE1CjB,GAAO,IAAMsM,mBAAmBvI,EAAEwI,cAAcC,QAAQC,uBACxDzM,GAAO,IAAMsM,mBAAmB,EAAK3J,MAAM+J,KAAK/M,MAChDK,GAAO,IAAMsM,mBAAmBrL,IAAAA,QAAAA,WAEhC4D,OAAOqE,KAAKlJ,QAVV2M,MAAM1L,IAAAA,WAAAA,MAAqB,+CFUnCA,IAAAA,MAAAA,OAAAA,MAAyB3B,EAGzB2B,IAAAA,cAAoB,IAAIR,EAGxBQ,IAAAA,OAAAA,gBAA6B,CAC3BlB,KAAM,uBACNuL,UAAWL,IAIbU,EAAAA,EAAAA,QAAOH,IAAAA,UAAoB,YAAY,SAAUrG,GAC/C,IAAMyH,IAAc3L,IAAAA,MAAAA,UAAoB,wBAClC4L,IAAerN,KAAKkB,KAAKoM,qBAE/B,GAAI7L,IAAAA,QAAAA,OAAqBA,IAAAA,QAAAA,KAAAA,0BAA8CzB,KAAKkB,OAASO,IAAAA,QAAAA,OAAqB2L,GAAaC,IAAe,CACpI,IAAME,EAAcvN,KAAKkB,KAAKoM,qBAE9B3H,EAAMK,IACJ,UACAwH,IAAAA,UACE,CACEC,KAAMhM,IAAAA,MAAU,eAAgB,CAC9BiM,SAAU1N,KAAKkB,KAAKwM,aAEtBC,KAAM,UACN5J,KAAM,sBAER,CACE/D,KAAKkB,OAASO,IAAAA,QAAAA,KACVA,IAAAA,WAAAA,MAAqB,kCACrBA,IAAAA,WAAAA,MAAqB,yCACzB,IACA8L,EAAc,EAAI,UAAM1J,UAAU,gBAAgB0J,GAAsB,KAG5E,Y","sources":["webpack://@fof/upload/webpack/bootstrap","webpack://@fof/upload/webpack/runtime/compat get default export","webpack://@fof/upload/webpack/runtime/define property getters","webpack://@fof/upload/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/upload/webpack/runtime/make namespace object","webpack://@fof/upload/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/upload/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/upload/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/upload/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/mixin']\"","webpack://@fof/upload/./src/common/models/File.js","webpack://@fof/upload/./src/forum/states/FileListState.js","webpack://@fof/upload/external root \"flarum.core.compat['forum/components/Post']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/TextEditor']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/Component']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@fof/upload/./src/forum/components/UploadButton.js","webpack://@fof/upload/./src/forum/components/DragAndDrop.js","webpack://@fof/upload/./src/forum/components/PasteClipboard.js","webpack://@fof/upload/./src/forum/handler/Uploader.js","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Alert']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@fof/upload/./src/common/mimeToIcon.js","webpack://@fof/upload/./src/forum/components/UserFileList.js","webpack://@fof/upload/./src/forum/components/FileManagerModal.js","webpack://@fof/upload/./src/forum/components/FileManagerButton.js","webpack://@fof/upload/./src/forum/components/UploadsUserPage.js","webpack://@fof/upload/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/upload/./src/forum/components/index.js","webpack://@fof/upload/./src/forum/index.js","webpack://@fof/upload/./src/forum/addUploadButton.js","webpack://@fof/upload/./src/forum/downloadButtonInteraction.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/mixin'];","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class File extends mixin(Model, {\n  baseName: Model.attribute('baseName'),\n  path: Model.attribute('path'),\n  url: Model.attribute('url'),\n  type: Model.attribute('type'),\n  size: Model.attribute('size'),\n  humanSize: Model.attribute('humanSize'),\n  createdAt: Model.attribute('createdAt'),\n  uuid: Model.attribute('uuid'),\n  tag: Model.attribute('tag'),\n  hidden: Model.attribute('hidden'),\n  bbcode: Model.attribute('bbcode'),\n}) {\n  /**\n   * Use FoF Uploads endpoint\n   */\n  apiEndpoint() {\n    return '/fof/uploads' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import app from 'flarum/forum/app';\n\nexport default class FileListState {\n  constructor() {\n    this.user = null;\n\n    this.files = [];\n\n    this.moreResults = false;\n\n    this.loading = false;\n  }\n\n  /**\n   * Set user and load list\n   *\n   * @param user A user to populate the media manager\n   */\n  setUser(user) {\n    // Keep previous state\n    if (user === this.user) return;\n\n    // Set user\n    this.user = user;\n\n    // Reset file list\n    this.files = [];\n\n    // Load user files\n    this.loadResults();\n  }\n\n  /**\n   * Load more user files\n   *\n   * @param offset The index to start the page at.\n   */\n  loadResults(offset = 0) {\n    if (!this.user) return;\n\n    this.loading = true;\n\n    return app.store\n      .find('fof/uploads', {\n        filter: {\n          user: this.user.id(),\n        },\n        page: {\n          offset,\n        },\n      })\n      .then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Load the next page of discussion results.\n   */\n  loadMore() {\n    this.loading = true;\n\n    this.loadResults(this.files.length).then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Parse results and append them to the file list.\n   */\n  parseResults(results) {\n    this.files.push(...results);\n\n    this.loading = false;\n    this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n    m.redraw();\n\n    return results;\n  }\n\n  /**\n   * Add files to the beginning of the list\n   */\n  addToList(files) {\n    if (Array.isArray(files)) {\n      this.files.unshift(...files);\n    } else {\n      this.files.unshift(files);\n    }\n  }\n\n  /**\n   * Are there any files in the list?\n   */\n  hasFiles() {\n    return this.files.length > 0;\n  }\n\n  /**\n   * Is the file list loading?\n   */\n  isLoading() {\n    return this.loading;\n  }\n\n  /**\n   * Does this user has more files?\n   */\n  hasMoreResults() {\n    return this.moreResults;\n  }\n\n  /**\n   * Does this user have any files?\n   */\n  empty() {\n    return !this.hasFiles() && !this.isLoading();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/TextEditor'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport classList from 'flarum/common/utils/classList';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class UploadButton extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.attrs.uploader.on('uploaded', () => {\n      // reset the button for a new upload\n      this.$('form')[0].reset();\n\n      // redraw to reflect uploader.loading in the DOM\n      m.redraw();\n    });\n\n    this.isMediaUploadButton = vnode.attrs.isMediaUploadButton || false;\n  }\n\n  view() {\n    const buttonText = this.attrs.uploader.uploading\n      ? app.translator.trans('fof-upload.forum.states.loading')\n      : app.translator.trans('fof-upload.forum.buttons.upload');\n\n    return (\n      <Tooltip text={buttonText}>\n        <Button\n          className={classList([\n            'Button',\n            'hasIcon',\n            'fof-upload-button',\n            !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--icon',\n            !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--link',\n            this.attrs.uploader.uploading && 'uploading',\n          ])}\n          icon={!this.attrs.uploader.uploading && 'fas fa-file-upload'}\n          onclick={this.uploadButtonClicked.bind(this)}\n          disabled={this.attrs.disabled}\n        >\n          {this.attrs.uploader.uploading && <LoadingIndicator size=\"small\" display=\"inline\" className=\"Button-icon\" />}\n          {(this.isMediaUploadButton || this.attrs.uploader.uploading) && <span className=\"Button-label\">{buttonText}</span>}\n          <form>\n            <input type=\"file\" multiple={true} onchange={this.process.bind(this)} />\n          </form>\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  /**\n   * Process the upload event.\n   *\n   * @param e\n   */\n  process(e) {\n    // get the file from the input field\n    const files = this.$('input').prop('files');\n\n    if (files.length === 0) {\n      // We've got no files to upload, so trying\n      // to begin an upload will show an error\n      // to the user.\n      return;\n    }\n\n    this.attrs.uploader.upload(files, !this.isMediaUploadButton);\n  }\n\n  /**\n   * Event handler for upload button being clicked\n   *\n   * @param {PointerEvent} e\n   */\n  uploadButtonClicked(e) {\n    // Trigger click on hidden input element\n    // (Opens file dialog)\n    this.$('input').click();\n  }\n}\n","export default class DragAndDrop {\n  constructor(upload, composerElement) {\n    this.upload = upload;\n    this.composerElement = composerElement;\n\n    // Keep references to the bound methods so we can remove the event listeners later\n    this.handlers = {};\n\n    if (!this.supportsFileDragging()) {\n      return;\n    }\n\n    this.composerElement.addEventListener('dragover', (this.handlers.in = this.in.bind(this)));\n\n    this.composerElement.addEventListener('dragleave', (this.handlers.out = this.out.bind(this)));\n    this.composerElement.addEventListener('dragend', this.handlers.out);\n\n    this.composerElement.addEventListener('drop', (this.handlers.dropping = this.dropping.bind(this)));\n  }\n\n  supportsFileDragging() {\n    // Based on https://css-tricks.com/drag-and-drop-file-uploading/\n    const div = document.createElement('div');\n\n    return ('draggable' in div || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;\n  }\n\n  unload() {\n    // If the handlers were not set (drag and drop not supported), we skip removing them\n    if (!this.handlers.in) {\n      return;\n    }\n\n    this.composerElement.removeEventListener('dragover', this.handlers.in);\n\n    this.composerElement.removeEventListener('dragleave', this.handlers.out);\n    this.composerElement.removeEventListener('dragend', this.handlers.out);\n\n    this.composerElement.removeEventListener('drop', this.handlers.dropping);\n  }\n\n  isNotFile(event) {\n    // Checking event.dataTransfer.files.length does not work on dragover event, it's always zero\n    // So we use the dataTransfer.items property to check whether any file is being dragged\n    if (event.dataTransfer.items) {\n      for (let i = 0; i < event.dataTransfer.items.length; i++) {\n        if (event.dataTransfer.items[i].kind !== 'file') {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  in(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.over) {\n      this.composerElement.classList.add('fof-upload-dragging');\n      this.over = true;\n    }\n  }\n\n  out(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (this.over) {\n      this.composerElement.classList.remove('fof-upload-dragging');\n      this.over = false;\n    }\n  }\n\n  dropping(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    this.upload(event.dataTransfer.files);\n\n    this.composerElement.classList.remove('fof-upload-dragging');\n  }\n}\n","export default class PasteClipboard {\n  constructor(upload, element) {\n    this.upload = upload;\n\n    // We don't need to remove the events listeners, because they'll get removed when the DOM does.\n    element.addEventListener('paste', this.paste.bind(this));\n  }\n\n  paste(e) {\n    if (e.clipboardData && e.clipboardData.items) {\n      const items = e.clipboardData.items;\n\n      const files = [];\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          files.push(items[i].getAsFile());\n        }\n      }\n\n      if (files.length > 0) {\n        e.preventDefault();\n\n        this.upload(files);\n      }\n    }\n  }\n}\n","import app from 'flarum/forum/app';\n\nexport default class Uploader {\n  constructor() {\n    this.callbacks = {\n      success: [],\n      failure: [],\n      uploading: [],\n      uploaded: [],\n    };\n    this.uploading = false;\n  }\n\n  on(type, callback) {\n    this.callbacks[type].push(callback);\n  }\n\n  dispatch(type, response) {\n    this.callbacks[type].forEach((callback) => callback(response));\n  }\n\n  upload(files, addBBcode = true) {\n    this.uploading = true;\n    this.dispatch('uploading', files);\n\n    m.redraw(); // Forcing a redraw so that the button also updates if uploadFiles() is called from DragAndDrop or PasteClipboard\n\n    const body = new FormData();\n\n    for (let i = 0; i < files.length; i++) {\n      body.append('files[]', files[i]);\n    }\n\n    // send a POST request to the api\n    return app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/fof/upload',\n        // prevent JSON.stringify'ing the form data in the XHR call\n        serialize: (raw) => raw,\n        body,\n      })\n      .then((result) => this.uploaded(result, addBBcode))\n      .catch((error) => {\n        this.uploading = false;\n        m.redraw();\n\n        throw error;\n      });\n  }\n\n  uploaded(result, addBBcode = false) {\n    this.uploading = false;\n\n    result.data.forEach((file) => {\n      const fileObj = app.store.pushObject(file);\n\n      // Add file to media manager\n      app.fileListState.addToList(fileObj);\n\n      // Dispatch\n      this.dispatch('success', {\n        file: fileObj,\n        addBBcode,\n      });\n    });\n\n    this.dispatch('uploaded');\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Alert'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const image = ['image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml', 'image/gif'];\nconst archive = ['application/zip', 'application/x-7z-compressed', 'application/gzip', 'application/vnd.rar', 'application/x-rar-compressed'];\nconst code = ['text/html', 'text/css', 'text/javascript', 'application/json', 'application/ld+json', 'text/javascript', 'application/x-httpd-php'];\nconst word = [\n  'application/x-abiword',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'application/pdf',\n];\n\n/**\n * Returns a FontAwesome icon class for a specified MIME type.\n *\n * If it's a known image type, it returns `image` instead.\n *\n * @param {string} fileType MIME type\n * @returns {string} Icon for MIME type\n */\nexport default function mimeToIcon(fileType) {\n  // Display image (do not display for)\n  if (image.includes(fileType)) {\n    return 'image';\n  }\n  // Display image icon for other types\n  else if (fileType.includes('image/')) {\n    return 'far fa-file-image';\n  }\n  // Video icon\n  else if (fileType.includes('video/')) {\n    return 'far fa-file-video';\n  }\n  // Archive icon\n  else if (archive.indexOf(fileType) >= 0) {\n    return 'far fa-file-archive';\n  }\n  // PDF icon\n  else if (fileType === 'application/pdf') {\n    return 'far fa-file-pdf';\n  }\n  // Word\n  else if (word.indexOf(fileType) >= 0) {\n    return 'far fa-file-word';\n  }\n  // Audio icon\n  else if (fileType.includes('audio/')) {\n    return 'far fa-file-audio';\n  }\n  // Code files\n  else if (code.indexOf(fileType) >= 0) {\n    return 'far fa-file-code';\n  }\n\n  return 'far fa-file';\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\n\nimport Button from 'flarum/common/components/Button';\nimport Alert from 'flarum/common/components/Alert';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\n\nimport mimeToIcon from '../../common/mimeToIcon';\n\nexport default class UserFileList extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Load file list\n    app.fileListState.setUser(vnode.attrs.user || app.session.user);\n\n    this.inModal = vnode.attrs.selectable;\n    this.restrictFileType = vnode.attrs.restrictFileType || null;\n    this.downloadOnClick = this.attrs.downloadOnClick || false;\n    /**\n     * @type {string[]} List of file UUIDs currently being hidden.\n     */\n    this.filesBeingHidden = [];\n\n    /**\n     * The user who's media we are dealing with\n     */\n    this.user = app.fileListState.user;\n  }\n\n  view() {\n    /**\n     * @type {{empty(): boolean, files: import('../../common/models/File').default[]}}\n     */\n    const state = app.fileListState;\n\n    return (\n      <div className=\"fof-upload-file-list\" aria-live=\"polite\">\n        {/* Loading */}\n        {state.isLoading() && state.files.length === 0 && (\n          <div className={'fof-upload-loading'}>\n            {app.translator.trans('fof-upload.forum.file_list.loading')}\n\n            <LoadingIndicator />\n          </div>\n        )}\n\n        {/* Empty personal file list */}\n        {this.inModal && state.empty() && (\n          <p className=\"fof-upload-empty\">\n            <i className=\"fas fa-cloud-upload-alt fof-upload-empty-icon\" />\n            {app.translator.trans(`fof-upload.forum.file_list.modal_empty_${app.screen() !== 'phone' ? 'desktop' : 'phone'}`)}\n          </p>\n        )}\n\n        {/* Empty file list */}\n        {!this.inModal && state.empty() && (\n          <div className=\"Placeholder\">\n            <p className=\"fof-upload-empty\">{app.translator.trans('fof-upload.forum.file_list.empty')}</p>\n          </div>\n        )}\n\n        {/* File list */}\n        <ul>\n          {state.files.map((file) => {\n            const fileIcon = mimeToIcon(file.type());\n            const fileSelectable = this.restrictFileType ? this.isSelectable(file) : true;\n\n            const fileClassNames = classList([\n              'fof-file',\n              // File is image\n              fileIcon === 'image' && 'fof-file-type-image',\n              // File is selected\n              this.attrs.selectedFiles && this.attrs.selectedFiles.indexOf(file.id()) >= 0 && 'fof-file-selected',\n            ]);\n\n            /**\n             * File's baseName (file name + extension)\n             * @type {string}\n             */\n            const fileName = file.baseName();\n\n            const isFileHiding = this.filesBeingHidden.includes(file.uuid());\n\n            return (\n              <li aria-busy={isFileHiding}>\n                {app.session.user && (this.user === app.session.user || app.session.user.deleteOthersMediaLibrary()) && (\n                  <Button\n                    className=\"Button Button--icon fof-file-delete\"\n                    icon=\"far fa-trash-alt\"\n                    aria-label={app.translator.trans('fof-upload.forum.file_list.delete_file_a11y_label', { fileName })}\n                    disabled={isFileHiding}\n                    onclick={this.hideFile.bind(this, file)}\n                  />\n                )}\n\n                <button\n                  className={fileClassNames}\n                  onclick={() => this.onFileClick(file)}\n                  disabled={!fileSelectable || isFileHiding}\n                  aria-label={extractText(app.translator.trans('fof-upload.forum.file_list.select_file_a11y_label', { fileName }))}\n                >\n                  <figure>\n                    {fileIcon === 'image' ? (\n                      <img\n                        src={file.url()}\n                        className=\"fof-file-image-preview\"\n                        draggable={false}\n                        // Images should always have an `alt`, even if empty!\n                        //\n                        // As we already state the file name as part of the\n                        // button alt label, there's no point in restating it.\n                        //\n                        // See: https://www.w3.org/WAI/tutorials/images/decorative#decorative-image-as-part-of-a-text-link\n                        alt=\"\"\n                      />\n                    ) : (\n                      <span\n                        className=\"fof-file-icon\"\n                        // Prevents a screen-reader from traversing this node.\n                        //\n                        // This is a placeholder for when no preview is available,\n                        // and a preview won't benefit a user using a screen\n                        // reader anyway, so there is no benefit to making them\n                        // aware of a lack of a preview.\n                        role=\"presentation\"\n                      >\n                        <i className={`fa-fw ${fileIcon}`} />\n                      </span>\n                    )}\n\n                    <figcaption className=\"fof-file-name\">{fileName}</figcaption>\n\n                    {isFileHiding && (\n                      <span class=\"fof-file-loading\" role=\"status\" aria-label={app.translator.trans('fof-upload.forum.file_list.hide_file.loading')}>\n                        <LoadingIndicator />\n                      </span>\n                    )}\n                  </figure>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        {/* Load more files */}\n        {state.hasMoreResults() && (\n          <div className={'fof-load-more-files'}>\n            <Button className={'Button Button--primary'} disabled={state.isLoading()} loading={state.isLoading()} onclick={() => state.loadMore()}>\n              {app.translator.trans('fof-upload.forum.file_list.load_more_files_btn')}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Execute function on file click\n   *\n   * @param {import('../../common/models/File').default} file\n   */\n  onFileClick(file) {\n    // Custom functionality\n    if (this.attrs.onFileSelect) {\n      this.attrs.onFileSelect(file);\n      return;\n    }\n\n    // Download on click\n    if (this.attrs.downloadOnClick) {\n      window.open(file.url());\n      return;\n    }\n  }\n\n  /**\n   * Check if a file is selectable\n   *\n   * @param {import('../../common/models/File').default} file\n   */\n  isSelectable(file) {\n    const fileType = file.type();\n\n    // Custom defined file types\n    if (Array.isArray(this.restrictFileType)) {\n      return this.restrictFileType.indexOf(fileType) >= 0;\n    }\n\n    // Image\n    else if (this.restrictFileType === 'image') {\n      return fileType.includes('image/');\n    }\n\n    // Audio\n    else if (this.restrictFileType === 'audio') {\n      return fileType.includes('audio/');\n    }\n\n    // Video\n    else if (this.restrictFileType === 'video') {\n      return fileType.includes('video/');\n    }\n\n    return false;\n  }\n\n  /**\n   * Begins the hiding process for a file.\n   *\n   * - Shows a native confirmation dialog\n   * - If confirmed, sends AJAX request to the hide file API\n   *\n   * @param {import('../../common/models/File').default} file File to hide\n   */\n  hideFile(file) {\n    /**\n     * @type {string} File UUID\n     */\n    const uuid = file.uuid();\n\n    if (this.filesBeingHidden.includes(uuid)) return;\n\n    this.filesBeingHidden.push(uuid);\n\n    const confirmHide = confirm(\n      extractText(app.translator.trans('fof-upload.forum.file_list.hide_file.hide_confirmation', { fileName: file.baseName() }))\n    );\n\n    if (confirmHide) {\n      app\n        .request({\n          method: 'PATCH',\n          url: `${app.forum.attribute('apiUrl')}/fof/upload/hide`,\n          body: { uuid },\n        })\n        .then(() => {\n          app.alerts.show(Alert, { type: 'success' }, app.translator.trans('fof-upload.forum.file_list.hide_file.hide_success'));\n        })\n        .catch(() => {\n          app.alerts.show(\n            Alert,\n            { type: 'error' },\n            app.translator.trans('fof-upload.forum.file_list.hide_file.hide_fail', { fileName: file.fileName() })\n          );\n        })\n        .then(() => {\n          // Remove hidden file from state\n          /**\n           * @type {{ files: import('../../common/models/File').default[] }}\n           */\n          const state = app.fileListState;\n\n          const index = state.files.findIndex((file) => uuid === file.uuid());\n          state.files.splice(index, 1);\n\n          // Remove file from hiding list\n          const i = this.filesBeingHidden.indexOf(uuid);\n          this.filesBeingHidden.splice(i, 1);\n        });\n    } else {\n      // Remove file from hiding list\n      const i = this.filesBeingHidden.indexOf(uuid);\n      this.filesBeingHidden.splice(i, 1);\n    }\n  }\n}\n","import Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport UploadButton from './UploadButton';\nimport UserFileList from './UserFileList';\nimport DragAndDrop from './DragAndDrop';\n\nexport default class FileManagerModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Initialize upload managers\n    this.uploader = vnode.attrs.uploader;\n\n    // Current selected files\n    this.selectedFiles = [];\n\n    // Allow multiselect\n    this.multiSelect = vnode.attrs.multiSelect || true;\n\n    // Restrict file selection to specific types\n    this.restrictFileType = vnode.attrs.restrictFileType || null;\n\n    // Drag & drop\n    this.dragDrop = null;\n\n    // Initialize uploads\n    this.onUpload();\n  }\n\n  className() {\n    return 'Modal--large fof-file-manager-modal';\n  }\n\n  /**\n   * Initialize drag & drop\n   */\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.dragDrop = new DragAndDrop((files) => this.uploader.upload(files, false), this.$().find('.Modal-content')[0]);\n  }\n\n  /**\n   * Remove events from modal content\n   */\n  onremove() {\n    if (this.dragDrop) {\n      this.dragDrop.unload();\n    }\n  }\n\n  view() {\n    const fileCount = this.selectedFiles.length;\n\n    return (\n      <div className={`Modal modal-dialog ${this.className()}`}>\n        <div className=\"Modal-content\">\n          <div className=\"fof-modal-buttons App-backControl\">\n            <UploadButton uploader={this.uploader} disabled={app.fileListState.isLoading()} isMediaUploadButton />\n          </div>\n\n          <div className=\"fof-drag-and-drop\">\n            <div className=\"fof-drag-and-drop-release\">\n              <i className=\"fas fa-cloud-upload-alt\" />\n\n              {app.translator.trans('fof-upload.forum.file_list.release_to_upload')}\n            </div>\n          </div>\n\n          <div className=\"Modal-header\">\n            <h3 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('fof-upload.forum.media_manager')}</h3>\n          </div>\n\n          {this.alertAttrs && (\n            <div className=\"Modal-alert\">\n              <Alert {...this.alertAttrs} />\n            </div>\n          )}\n\n          <div className=\"Modal-body\">\n            <UserFileList\n              user={this.attrs.user}\n              selectable\n              onFileSelect={this.onFileSelect.bind(this)}\n              selectedFiles={this.selectedFiles}\n              restrictFileType={this.restrictFileType}\n            />\n          </div>\n\n          <div className=\"Modal-footer\">\n            <Button onclick={this.hide.bind(this)} className=\"Button\">\n              {app.translator.trans('fof-upload.forum.buttons.cancel')}\n            </Button>\n\n            <Button\n              onclick={this.onSelect.bind(this)}\n              disabled={this.selectedFiles.length === 0 || (!this.multiSelect && this.selectedFiles.length > 1)}\n              className=\"Button Button--primary\"\n            >\n              {app.translator.trans('fof-upload.forum.file_list.confirm_selection_btn', { fileCount })}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Add or remove file from selected files\n   *\n   * @param {File} file\n   */\n  onFileSelect(file) {\n    const itemPosition = this.selectedFiles.indexOf(file.id());\n\n    if (itemPosition >= 0) {\n      this.selectedFiles.splice(itemPosition, 1);\n    } else {\n      if (this.multiSelect) {\n        this.selectedFiles.push(file.id());\n      } else {\n        this.selectedFiles = [file.id()];\n      }\n    }\n  }\n\n  /**\n   * Add files to file list after upload\n   */\n  onUpload() {\n    this.uploader.on('success', ({ file }) => {\n      if (this.multiSelect) {\n        this.selectedFiles.push(file.id());\n      } else {\n        this.selectedFiles = [file.id()];\n      }\n    });\n  }\n\n  /**\n   * Add selected files to the composer\n   */\n  onSelect() {\n    this.hide();\n\n    // Custom callback\n    if (this.attrs.onSelect) {\n      this.attrs.onSelect(this.selectedFiles);\n\n      return;\n    }\n\n    // Add selected files to composer\n    this.selectedFiles.map((fileId) => {\n      const file = app.store.getById('files', fileId);\n\n      app.composer.editor.insertAtCursor(file.bbcode() + '\\n', false);\n    });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport FileManagerModal from './FileManagerModal';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class FileManagerButton extends Component {\n  view() {\n    return (\n      <Tooltip text={app.translator.trans('fof-upload.forum.buttons.media')}>\n        {Button.component({\n          className: 'Button fof-upload-button Button--icon',\n          onclick: this.fileManagerButtonClicked.bind(this),\n          icon: 'fas fa-photo-video',\n        })}\n      </Tooltip>\n    );\n  }\n\n  /**\n   * Event handler for upload button being clicked\n   *\n   * @param {PointerEvent} e\n   */\n  fileManagerButtonClicked(e) {\n    e.preventDefault();\n\n    // Open dialog\n    app.modal.show(FileManagerModal, {\n      uploader: this.attrs.uploader,\n    });\n  }\n}\n","import app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport UserFileList from './UserFileList';\n\nexport default class UploadsUserPage extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.user = null;\n\n    this.loadUser(m.route.param('username'));\n  }\n\n  content() {\n    if (app.session.user && (app.session.user.viewOthersMediaLibrary() || this.user === app.session.user)) {\n      return (\n        this.user &&\n        UserFileList.component({\n          user: this.user,\n          selectable: false,\n          downloadOnClick: true,\n        })\n      );\n    } else {\n      return null;\n    }\n  }\n\n  show(user) {\n    super.show(user);\n    this.user = user;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","import Uploader from '../handler/Uploader';\nimport DragAndDrop from './DragAndDrop';\nimport FileManagerButton from './FileManagerButton';\nimport FileManagerModal from './FileManagerModal';\nimport UserFileList from './UserFileList';\nimport UploadButton from './UploadButton';\n\nexport const components = {\n  DragAndDrop,\n  FileManagerButton,\n  FileManagerModal,\n  UserFileList,\n  Uploader,\n  UploadButton,\n};\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nimport File from '../common/models/File';\nimport FileListState from './states/FileListState';\nimport downloadButtonInteraction from './downloadButtonInteraction';\nimport addUploadButton from './addUploadButton';\nimport UploadsUserPage from './components/UploadsUserPage';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\n\nexport * from './components';\n\napp.initializers.add('fof-upload', () => {\n  User.prototype.viewOthersMediaLibrary = Model.attribute('fof-upload-viewOthersMediaLibrary');\n  User.prototype.deleteOthersMediaLibrary = Model.attribute('fof-upload-deleteOthersMediaLibrary');\n  User.prototype.uploadCountCurrent = Model.attribute('fof-upload-uploadCountCurrent');\n  User.prototype.uploadCountAll = Model.attribute('fof-upload-uploadCountAll');\n\n  addUploadButton();\n  downloadButtonInteraction();\n\n  // File model\n  app.store.models.files = File;\n\n  // File list state\n  app.fileListState = new FileListState();\n\n  // Add user uploads to the user profile\n  app.routes['user.uploads'] = {\n    path: '/u/:username/uploads',\n    component: UploadsUserPage,\n  };\n\n  // Add uploads to user page menu items\n  extend(UserPage.prototype, 'navItems', function (items) {\n    const canUpload = !!app.forum.attribute('fof-upload.canUpload');\n    const hasUploads = !!this.user.uploadCountCurrent();\n\n    if (app.session.user && (app.session.user.viewOthersMediaLibrary() || (this.user === app.session.user && (canUpload || hasUploads)))) {\n      const uploadCount = this.user.uploadCountCurrent();\n\n      items.add(\n        'uploads',\n        LinkButton.component(\n          {\n            href: app.route('user.uploads', {\n              username: this.user.username(),\n            }),\n            name: 'uploads',\n            icon: 'fas fa-file-upload',\n          },\n          [\n            this.user === app.session.user\n              ? app.translator.trans('fof-upload.forum.buttons.media')\n              : app.translator.trans('fof-upload.forum.buttons.user_uploads'),\n            ' ',\n            uploadCount > 0 ? <span className=\"Button-badge\">{uploadCount}</span> : '',\n          ]\n        ),\n        80\n      );\n    }\n  });\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport TextEditor from 'flarum/common/components/TextEditor';\nimport UploadButton from './components/UploadButton';\nimport DragAndDrop from './components/DragAndDrop';\nimport PasteClipboard from './components/PasteClipboard';\nimport Uploader from './handler/Uploader';\nimport FileManagerButton from './components/FileManagerButton';\n\nexport default function () {\n  extend(TextEditor.prototype, 'oninit', function () {\n    this.uploader = new Uploader();\n  });\n  extend(TextEditor.prototype, 'controlItems', function (items) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    const composerButtonVisiblity = app.forum.attribute('fof-upload.composerButtonVisiblity');\n\n    // Add media button\n    if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'media-btn') {\n      items.add(\n        'fof-upload-media',\n        FileManagerButton.component({\n          uploader: this.uploader,\n        })\n      );\n    }\n\n    // Add upload button\n    if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'upload-btn') {\n      items.add(\n        'fof-upload',\n        UploadButton.component({\n          uploader: this.uploader,\n        })\n      );\n    }\n  });\n\n  extend(TextEditor.prototype, 'oncreate', function (f_, vnode) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    this.uploader.on('success', ({ file, addBBcode }) => {\n      if (!addBBcode) return;\n\n      this.attrs.composer.editor.insertAtCursor(file.bbcode() + '\\n', false);\n\n      // We wrap this in a typeof check to prevent it running when a user\n      // is creating a new discussion. There's nothing to preview in a new\n      // discussion, so the `preview` function isn't defined.\n      if (typeof this.attrs.preview === 'function') {\n        // Scroll the preview into view\n        // preview() causes the composer to close on mobile, but we don't want that. We want only the scroll\n        // We work around that by temporarily patching the isFullScreen method\n        const originalIsFullScreen = app.composer.isFullScreen;\n\n        app.composer.isFullScreen = () => false;\n\n        this.attrs.preview();\n\n        app.composer.isFullScreen = originalIsFullScreen;\n      }\n    });\n\n    this.dragAndDrop = new DragAndDrop((files) => this.uploader.upload(files), this.$().parents('.Composer')[0]);\n\n    new PasteClipboard((files) => this.uploader.upload(files), this.$('.TextEditor-editor')[0]);\n  });\n\n  extend(TextEditor.prototype, 'onremove', function (f_, vnode) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    this.dragAndDrop.unload();\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Post from 'flarum/forum/components/Post';\n\n/* global $ */\n\nexport default function () {\n  extend(Post.prototype, 'oncreate', function () {\n    this.$('[data-fof-upload-download-uuid]')\n      .unbind('click')\n      .on('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!app.forum.attribute('fof-upload.canDownload')) {\n          alert(app.translator.trans('fof-upload.forum.states.unauthorized'));\n          return;\n        }\n\n        let url = app.forum.attribute('apiUrl') + '/fof/download';\n\n        url += '/' + encodeURIComponent(e.currentTarget.dataset.fofUploadDownloadUuid);\n        url += '/' + encodeURIComponent(this.attrs.post.id());\n        url += '/' + encodeURIComponent(app.session.csrfToken);\n\n        window.open(url);\n      });\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","File","apiEndpoint","this","exists","data","id","mixin","Model","baseName","path","url","type","size","humanSize","createdAt","uuid","tag","hidden","bbcode","FileListState","user","files","moreResults","loading","setUser","loadResults","offset","app","filter","page","then","parseResults","bind","loadMore","length","results","push","payload","links","next","m","redraw","addToList","Array","isArray","unshift","hasFiles","isLoading","hasMoreResults","empty","UploadButton","oninit","vnode","attrs","uploader","on","$","reset","isMediaUploadButton","view","buttonText","uploading","text","className","classList","icon","onclick","uploadButtonClicked","disabled","display","multiple","onchange","process","e","upload","click","Component","DragAndDrop","composerElement","handlers","supportsFileDragging","addEventListener","out","dropping","div","document","createElement","window","unload","removeEventListener","isNotFile","event","dataTransfer","items","i","kind","preventDefault","over","add","remove","PasteClipboard","element","paste","clipboardData","indexOf","getAsFile","Uploader","callbacks","success","failure","uploaded","callback","dispatch","response","forEach","addBBcode","body","FormData","append","method","serialize","raw","result","error","file","fileObj","image","archive","code","word","UserFileList","inModal","selectable","restrictFileType","downloadOnClick","filesBeingHidden","state","map","fileType","fileIcon","includes","fileSelectable","isSelectable","fileClassNames","selectedFiles","fileName","isFileHiding","hideFile","onFileClick","extractText","src","draggable","alt","role","class","onFileSelect","open","confirm","Alert","index","findIndex","splice","FileManagerModal","multiSelect","dragDrop","onUpload","oncreate","find","onremove","fileCount","fileListState","translator","trans","alertAttrs","hide","onSelect","itemPosition","fileId","store","getById","composer","editor","insertAtCursor","Modal","FileManagerButton","Button","fileManagerButtonClicked","UploadsUserPage","loadUser","route","param","content","component","show","UserPage","components","User","extend","TextEditor","composerButtonVisiblity","f_","preview","originalIsFullScreen","dragAndDrop","parents","Post","unbind","stopPropagation","encodeURIComponent","currentTarget","dataset","fofUploadDownloadUuid","post","alert","canUpload","hasUploads","uploadCountCurrent","uploadCount","LinkButton","href","username","name"],"sourceRoot":""}