{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/upload/webpack/bootstrap","webpack://@fof/upload/webpack/runtime/compat get default export","webpack://@fof/upload/webpack/runtime/define property getters","webpack://@fof/upload/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/upload/webpack/runtime/make namespace object","webpack://@fof/upload/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/upload/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/upload/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/upload/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/mixin']\"","webpack://@fof/upload/./src/common/models/File.js","webpack://@fof/upload/./src/forum/states/FileListState.js","webpack://@fof/upload/external root \"flarum.core.compat['forum/components/Post']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/TextEditor']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/Component']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@fof/upload/./src/forum/components/UploadButton.js","webpack://@fof/upload/./src/forum/components/DragAndDrop.js","webpack://@fof/upload/./src/forum/components/PasteClipboard.js","webpack://@fof/upload/./src/forum/handler/Uploader.js","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Alert']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@fof/upload/./src/common/mimeToIcon.js","webpack://@fof/upload/./src/forum/components/UserFileList.js","webpack://@fof/upload/./src/forum/components/FileManagerModal.js","webpack://@fof/upload/./src/forum/components/FileManagerButton.js","webpack://@fof/upload/./src/forum/components/UploadsUserPage.js","webpack://@fof/upload/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/upload/./src/forum/components/index.js","webpack://@fof/upload/./src/forum/index.js","webpack://@fof/upload/./src/forum/addUploadButton.js","webpack://@fof/upload/./src/forum/downloadButtonInteraction.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/mixin'];","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class File extends mixin(Model, {\n  baseName: Model.attribute('baseName'),\n  path: Model.attribute('path'),\n  url: Model.attribute('url'),\n  type: Model.attribute('type'),\n  size: Model.attribute('size'),\n  humanSize: Model.attribute('humanSize'),\n  createdAt: Model.attribute('createdAt'),\n  uuid: Model.attribute('uuid'),\n  tag: Model.attribute('tag'),\n  hidden: Model.attribute('hidden'),\n  bbcode: Model.attribute('bbcode'),\n}) {\n  /**\n   * Use FoF Uploads endpoint\n   */\n  apiEndpoint() {\n    return '/fof/uploads' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import app from 'flarum/forum/app';\n\nexport default class FileListState {\n  constructor() {\n    this.user = null;\n\n    this.files = [];\n\n    this.moreResults = false;\n\n    this.loading = false;\n  }\n\n  /**\n   * Set user and load list\n   *\n   * @param user A user to populate the media manager\n   */\n  setUser(user) {\n    // Keep previous state\n    if (user === this.user) return;\n\n    // Set user\n    this.user = user;\n\n    // Reset file list\n    this.files = [];\n\n    // Load user files\n    this.loadResults();\n  }\n\n  /**\n   * Load more user files\n   *\n   * @param offset The index to start the page at.\n   */\n  loadResults(offset = 0) {\n    if (!this.user) return;\n\n    this.loading = true;\n\n    return app.store\n      .find('fof/uploads', {\n        filter: {\n          user: this.user.id(),\n        },\n        page: {\n          offset,\n        },\n      })\n      .then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Load the next page of discussion results.\n   */\n  loadMore() {\n    this.loading = true;\n\n    this.loadResults(this.files.length).then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Parse results and append them to the file list.\n   */\n  parseResults(results) {\n    this.files.push(...results);\n\n    this.loading = false;\n    this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n    m.redraw();\n\n    return results;\n  }\n\n  /**\n   * Add files to the beginning of the list\n   */\n  addToList(files) {\n    if (Array.isArray(files)) {\n      this.files.unshift(...files);\n    } else {\n      this.files.unshift(files);\n    }\n  }\n\n  /**\n   * Are there any files in the list?\n   */\n  hasFiles() {\n    return this.files.length > 0;\n  }\n\n  /**\n   * Is the file list loading?\n   */\n  isLoading() {\n    return this.loading;\n  }\n\n  /**\n   * Does this user has more files?\n   */\n  hasMoreResults() {\n    return this.moreResults;\n  }\n\n  /**\n   * Does this user have any files?\n   */\n  empty() {\n    return !this.hasFiles() && !this.isLoading();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/TextEditor'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport classList from 'flarum/common/utils/classList';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class UploadButton extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.attrs.uploader.on('uploaded', () => {\n      // reset the button for a new upload\n      this.$('form')[0].reset();\n\n      // redraw to reflect uploader.loading in the DOM\n      m.redraw();\n    });\n\n    this.isMediaUploadButton = vnode.attrs.isMediaUploadButton || false;\n  }\n\n  view() {\n    const buttonText = this.attrs.uploader.uploading\n      ? app.translator.trans('fof-upload.forum.states.loading')\n      : app.translator.trans('fof-upload.forum.buttons.upload');\n\n    return (\n      <Tooltip text={buttonText}>\n        <Button\n          className={classList([\n            'Button',\n            'hasIcon',\n            'fof-upload-button',\n            !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--icon',\n            !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--link',\n            this.attrs.uploader.uploading && 'uploading',\n          ])}\n          icon={!this.attrs.uploader.uploading && 'fas fa-file-upload'}\n          onclick={this.uploadButtonClicked.bind(this)}\n          disabled={this.attrs.disabled}\n        >\n          {this.attrs.uploader.uploading && <LoadingIndicator size=\"small\" display=\"inline\" className=\"Button-icon\" />}\n          {(this.isMediaUploadButton || this.attrs.uploader.uploading) && <span className=\"Button-label\">{buttonText}</span>}\n          <form>\n            <input type=\"file\" multiple={true} onchange={this.process.bind(this)} />\n          </form>\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  /**\n   * Process the upload event.\n   *\n   * @param e\n   */\n  process(e) {\n    // get the file from the input field\n    const files = this.$('input').prop('files');\n\n    if (files.length === 0) {\n      // We've got no files to upload, so trying\n      // to begin an upload will show an error\n      // to the user.\n      return;\n    }\n\n    this.attrs.uploader.upload(files, !this.isMediaUploadButton);\n  }\n\n  /**\n   * Event handler for upload button being clicked\n   *\n   * @param {PointerEvent} e\n   */\n  uploadButtonClicked(e) {\n    // Trigger click on hidden input element\n    // (Opens file dialog)\n    this.$('input').click();\n  }\n}\n","export default class DragAndDrop {\n  constructor(upload, composerElement) {\n    this.upload = upload;\n    this.composerElement = composerElement;\n\n    // Keep references to the bound methods so we can remove the event listeners later\n    this.handlers = {};\n\n    if (!this.supportsFileDragging()) {\n      return;\n    }\n\n    this.composerElement.addEventListener('dragover', (this.handlers.in = this.in.bind(this)));\n\n    this.composerElement.addEventListener('dragleave', (this.handlers.out = this.out.bind(this)));\n    this.composerElement.addEventListener('dragend', this.handlers.out);\n\n    this.composerElement.addEventListener('drop', (this.handlers.dropping = this.dropping.bind(this)));\n  }\n\n  supportsFileDragging() {\n    // Based on https://css-tricks.com/drag-and-drop-file-uploading/\n    const div = document.createElement('div');\n\n    return ('draggable' in div || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;\n  }\n\n  unload() {\n    // If the handlers were not set (drag and drop not supported), we skip removing them\n    if (!this.handlers.in) {\n      return;\n    }\n\n    this.composerElement.removeEventListener('dragover', this.handlers.in);\n\n    this.composerElement.removeEventListener('dragleave', this.handlers.out);\n    this.composerElement.removeEventListener('dragend', this.handlers.out);\n\n    this.composerElement.removeEventListener('drop', this.handlers.dropping);\n  }\n\n  isNotFile(event) {\n    // Checking event.dataTransfer.files.length does not work on dragover event, it's always zero\n    // So we use the dataTransfer.items property to check whether any file is being dragged\n    if (event.dataTransfer.items) {\n      for (let i = 0; i < event.dataTransfer.items.length; i++) {\n        if (event.dataTransfer.items[i].kind !== 'file') {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  in(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.over) {\n      this.composerElement.classList.add('fof-upload-dragging');\n      this.over = true;\n    }\n  }\n\n  out(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (this.over) {\n      this.composerElement.classList.remove('fof-upload-dragging');\n      this.over = false;\n    }\n  }\n\n  dropping(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    this.upload(event.dataTransfer.files);\n\n    this.composerElement.classList.remove('fof-upload-dragging');\n  }\n}\n","export default class PasteClipboard {\n  constructor(upload, element) {\n    this.upload = upload;\n\n    // We don't need to remove the events listeners, because they'll get removed when the DOM does.\n    element.addEventListener('paste', this.paste.bind(this));\n  }\n\n  paste(e) {\n    if (e.clipboardData && e.clipboardData.items) {\n      const items = e.clipboardData.items;\n\n      const files = [];\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          files.push(items[i].getAsFile());\n        }\n      }\n\n      if (files.length > 0) {\n        e.preventDefault();\n\n        this.upload(files);\n      }\n    }\n  }\n}\n","import app from 'flarum/forum/app';\n\nexport default class Uploader {\n  constructor() {\n    this.callbacks = {\n      success: [],\n      failure: [],\n      uploading: [],\n      uploaded: [],\n    };\n    this.uploading = false;\n  }\n\n  on(type, callback) {\n    this.callbacks[type].push(callback);\n  }\n\n  dispatch(type, response) {\n    this.callbacks[type].forEach((callback) => callback(response));\n  }\n\n  upload(files, addBBcode = true) {\n    this.uploading = true;\n    this.dispatch('uploading', files);\n\n    m.redraw(); // Forcing a redraw so that the button also updates if uploadFiles() is called from DragAndDrop or PasteClipboard\n\n    const body = new FormData();\n\n    for (let i = 0; i < files.length; i++) {\n      body.append('files[]', files[i]);\n    }\n\n    // send a POST request to the api\n    return app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/fof/upload',\n        // prevent JSON.stringify'ing the form data in the XHR call\n        serialize: (raw) => raw,\n        body,\n      })\n      .then((result) => this.uploaded(result, addBBcode))\n      .catch((error) => {\n        this.uploading = false;\n        m.redraw();\n\n        const e = error.response.errors[0];\n\n        if (!e.code.includes('fof-upload')) {\n          throw error;\n        }\n\n        app.alerts.clear();\n        app.alerts.show(\n          {\n            type: 'error',\n          },\n          e.detail\n        );\n      });\n  }\n\n  uploaded(result, addBBcode = false) {\n    this.uploading = false;\n\n    result.data.forEach((file) => {\n      const fileObj = app.store.pushObject(file);\n\n      // Add file to media manager\n      app.fileListState.addToList(fileObj);\n\n      // Dispatch\n      this.dispatch('success', {\n        file: fileObj,\n        addBBcode,\n      });\n    });\n\n    this.dispatch('uploaded');\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Alert'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const image = ['image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml', 'image/gif'];\nconst archive = ['application/zip', 'application/x-7z-compressed', 'application/gzip', 'application/vnd.rar', 'application/x-rar-compressed'];\nconst code = ['text/html', 'text/css', 'text/javascript', 'application/json', 'application/ld+json', 'text/javascript', 'application/x-httpd-php'];\nconst word = [\n  'application/x-abiword',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'application/pdf',\n];\n\n/**\n * Returns a FontAwesome icon class for a specified MIME type.\n *\n * If it's a known image type, it returns `image` instead.\n *\n * @param {string} fileType MIME type\n * @returns {string} Icon for MIME type\n */\nexport default function mimeToIcon(fileType) {\n  // Display image (do not display for)\n  if (image.includes(fileType)) {\n    return 'image';\n  }\n  // Display image icon for other types\n  else if (fileType.includes('image/')) {\n    return 'far fa-file-image';\n  }\n  // Video icon\n  else if (fileType.includes('video/')) {\n    return 'far fa-file-video';\n  }\n  // Archive icon\n  else if (archive.indexOf(fileType) >= 0) {\n    return 'far fa-file-archive';\n  }\n  // PDF icon\n  else if (fileType === 'application/pdf') {\n    return 'far fa-file-pdf';\n  }\n  // Word\n  else if (word.indexOf(fileType) >= 0) {\n    return 'far fa-file-word';\n  }\n  // Audio icon\n  else if (fileType.includes('audio/')) {\n    return 'far fa-file-audio';\n  }\n  // Code files\n  else if (code.indexOf(fileType) >= 0) {\n    return 'far fa-file-code';\n  }\n\n  return 'far fa-file';\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\n\nimport Button from 'flarum/common/components/Button';\nimport Alert from 'flarum/common/components/Alert';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\n\nimport mimeToIcon from '../../common/mimeToIcon';\n\nexport default class UserFileList extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Load file list\n    app.fileListState.setUser(vnode.attrs.user || app.session.user);\n\n    this.inModal = vnode.attrs.selectable;\n    this.restrictFileType = vnode.attrs.restrictFileType || null;\n    this.downloadOnClick = this.attrs.downloadOnClick || false;\n    /**\n     * @type {string[]} List of file UUIDs currently being hidden.\n     */\n    this.filesBeingHidden = [];\n\n    /**\n     * The user who's media we are dealing with\n     */\n    this.user = app.fileListState.user;\n  }\n\n  view() {\n    /**\n     * @type {{empty(): boolean, files: import('../../common/models/File').default[]}}\n     */\n    const state = app.fileListState;\n\n    return (\n      <div className=\"fof-upload-file-list\" aria-live=\"polite\">\n        {/* Loading */}\n        {state.isLoading() && state.files.length === 0 && (\n          <div className={'fof-upload-loading'}>\n            {app.translator.trans('fof-upload.forum.file_list.loading')}\n\n            <LoadingIndicator />\n          </div>\n        )}\n\n        {/* Empty personal file list */}\n        {this.inModal && state.empty() && (\n          <p className=\"fof-upload-empty\">\n            <i className=\"fas fa-cloud-upload-alt fof-upload-empty-icon\" />\n            {app.translator.trans(`fof-upload.forum.file_list.modal_empty_${app.screen() !== 'phone' ? 'desktop' : 'phone'}`)}\n          </p>\n        )}\n\n        {/* Empty file list */}\n        {!this.inModal && state.empty() && (\n          <div className=\"Placeholder\">\n            <p className=\"fof-upload-empty\">{app.translator.trans('fof-upload.forum.file_list.empty')}</p>\n          </div>\n        )}\n\n        {/* File list */}\n        <ul>\n          {state.files.map((file) => {\n            const fileIcon = mimeToIcon(file.type());\n            const fileSelectable = this.restrictFileType ? this.isSelectable(file) : true;\n\n            const fileClassNames = classList([\n              'fof-file',\n              // File is image\n              fileIcon === 'image' && 'fof-file-type-image',\n              // File is selected\n              this.attrs.selectedFiles && this.attrs.selectedFiles.indexOf(file.id()) >= 0 && 'fof-file-selected',\n            ]);\n\n            /**\n             * File's baseName (file name + extension)\n             * @type {string}\n             */\n            const fileName = file.baseName();\n\n            const isFileHiding = this.filesBeingHidden.includes(file.uuid());\n\n            return (\n              <li aria-busy={isFileHiding}>\n                {app.session.user && (this.user === app.session.user || app.session.user.deleteOthersMediaLibrary()) && (\n                  <Button\n                    className=\"Button Button--icon fof-file-delete\"\n                    icon=\"far fa-trash-alt\"\n                    aria-label={app.translator.trans('fof-upload.forum.file_list.delete_file_a11y_label', { fileName })}\n                    disabled={isFileHiding}\n                    onclick={this.hideFile.bind(this, file)}\n                  />\n                )}\n\n                <button\n                  className={fileClassNames}\n                  onclick={() => this.onFileClick(file)}\n                  disabled={!fileSelectable || isFileHiding}\n                  aria-label={extractText(app.translator.trans('fof-upload.forum.file_list.select_file_a11y_label', { fileName }))}\n                >\n                  <figure>\n                    {fileIcon === 'image' ? (\n                      <img\n                        src={file.url()}\n                        className=\"fof-file-image-preview\"\n                        draggable={false}\n                        // Images should always have an `alt`, even if empty!\n                        //\n                        // As we already state the file name as part of the\n                        // button alt label, there's no point in restating it.\n                        //\n                        // See: https://www.w3.org/WAI/tutorials/images/decorative#decorative-image-as-part-of-a-text-link\n                        alt=\"\"\n                      />\n                    ) : (\n                      <span\n                        className=\"fof-file-icon\"\n                        // Prevents a screen-reader from traversing this node.\n                        //\n                        // This is a placeholder for when no preview is available,\n                        // and a preview won't benefit a user using a screen\n                        // reader anyway, so there is no benefit to making them\n                        // aware of a lack of a preview.\n                        role=\"presentation\"\n                      >\n                        <i className={`fa-fw ${fileIcon}`} />\n                      </span>\n                    )}\n\n                    <figcaption className=\"fof-file-name\">{fileName}</figcaption>\n\n                    {isFileHiding && (\n                      <span class=\"fof-file-loading\" role=\"status\" aria-label={app.translator.trans('fof-upload.forum.file_list.hide_file.loading')}>\n                        <LoadingIndicator />\n                      </span>\n                    )}\n                  </figure>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        {/* Load more files */}\n        {state.hasMoreResults() && (\n          <div className={'fof-load-more-files'}>\n            <Button className={'Button Button--primary'} disabled={state.isLoading()} loading={state.isLoading()} onclick={() => state.loadMore()}>\n              {app.translator.trans('fof-upload.forum.file_list.load_more_files_btn')}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Execute function on file click\n   *\n   * @param {import('../../common/models/File').default} file\n   */\n  onFileClick(file) {\n    // Custom functionality\n    if (this.attrs.onFileSelect) {\n      this.attrs.onFileSelect(file);\n      return;\n    }\n\n    // Download on click\n    if (this.attrs.downloadOnClick) {\n      window.open(file.url());\n      return;\n    }\n  }\n\n  /**\n   * Check if a file is selectable\n   *\n   * @param {import('../../common/models/File').default} file\n   */\n  isSelectable(file) {\n    const fileType = file.type();\n\n    // Custom defined file types\n    if (Array.isArray(this.restrictFileType)) {\n      return this.restrictFileType.indexOf(fileType) >= 0;\n    }\n\n    // Image\n    else if (this.restrictFileType === 'image') {\n      return fileType.includes('image/');\n    }\n\n    // Audio\n    else if (this.restrictFileType === 'audio') {\n      return fileType.includes('audio/');\n    }\n\n    // Video\n    else if (this.restrictFileType === 'video') {\n      return fileType.includes('video/');\n    }\n\n    return false;\n  }\n\n  /**\n   * Begins the hiding process for a file.\n   *\n   * - Shows a native confirmation dialog\n   * - If confirmed, sends AJAX request to the hide file API\n   *\n   * @param {import('../../common/models/File').default} file File to hide\n   */\n  hideFile(file) {\n    /**\n     * @type {string} File UUID\n     */\n    const uuid = file.uuid();\n\n    if (this.filesBeingHidden.includes(uuid)) return;\n\n    this.filesBeingHidden.push(uuid);\n\n    const confirmHide = confirm(\n      extractText(app.translator.trans('fof-upload.forum.file_list.hide_file.hide_confirmation', { fileName: file.baseName() }))\n    );\n\n    if (confirmHide) {\n      app\n        .request({\n          method: 'PATCH',\n          url: `${app.forum.attribute('apiUrl')}/fof/upload/hide`,\n          body: { uuid },\n        })\n        .then(() => {\n          app.alerts.show(Alert, { type: 'success' }, app.translator.trans('fof-upload.forum.file_list.hide_file.hide_success'));\n        })\n        .catch(() => {\n          app.alerts.show(\n            Alert,\n            { type: 'error' },\n            app.translator.trans('fof-upload.forum.file_list.hide_file.hide_fail', { fileName: file.fileName() })\n          );\n        })\n        .then(() => {\n          // Remove hidden file from state\n          /**\n           * @type {{ files: import('../../common/models/File').default[] }}\n           */\n          const state = app.fileListState;\n\n          const index = state.files.findIndex((file) => uuid === file.uuid());\n          state.files.splice(index, 1);\n\n          // Remove file from hiding list\n          const i = this.filesBeingHidden.indexOf(uuid);\n          this.filesBeingHidden.splice(i, 1);\n        });\n    } else {\n      // Remove file from hiding list\n      const i = this.filesBeingHidden.indexOf(uuid);\n      this.filesBeingHidden.splice(i, 1);\n    }\n  }\n}\n","import Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport UploadButton from './UploadButton';\nimport UserFileList from './UserFileList';\nimport DragAndDrop from './DragAndDrop';\n\nexport default class FileManagerModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Initialize upload managers\n    this.uploader = vnode.attrs.uploader;\n\n    // Current selected files\n    this.selectedFiles = [];\n\n    // Allow multiselect\n    this.multiSelect = vnode.attrs.multiSelect || true;\n\n    // Restrict file selection to specific types\n    this.restrictFileType = vnode.attrs.restrictFileType || null;\n\n    // Drag & drop\n    this.dragDrop = null;\n\n    // Initialize uploads\n    this.onUpload();\n  }\n\n  className() {\n    return 'Modal--large fof-file-manager-modal';\n  }\n\n  /**\n   * Initialize drag & drop\n   */\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.dragDrop = new DragAndDrop((files) => this.uploader.upload(files, false), this.$().find('.Modal-content')[0]);\n  }\n\n  /**\n   * Remove events from modal content\n   */\n  onremove() {\n    if (this.dragDrop) {\n      this.dragDrop.unload();\n    }\n  }\n\n  view() {\n    const fileCount = this.selectedFiles.length;\n\n    return (\n      <div className={`Modal modal-dialog ${this.className()}`}>\n        <div className=\"Modal-content\">\n          <div className=\"fof-modal-buttons App-backControl\">\n            <UploadButton uploader={this.uploader} disabled={app.fileListState.isLoading()} isMediaUploadButton />\n          </div>\n\n          <div className=\"fof-drag-and-drop\">\n            <div className=\"fof-drag-and-drop-release\">\n              <i className=\"fas fa-cloud-upload-alt\" />\n\n              {app.translator.trans('fof-upload.forum.file_list.release_to_upload')}\n            </div>\n          </div>\n\n          <div className=\"Modal-header\">\n            <h3 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('fof-upload.forum.media_manager')}</h3>\n          </div>\n\n          {this.alertAttrs && (\n            <div className=\"Modal-alert\">\n              <Alert {...this.alertAttrs} />\n            </div>\n          )}\n\n          <div className=\"Modal-body\">\n            <UserFileList\n              user={this.attrs.user}\n              selectable\n              onFileSelect={this.onFileSelect.bind(this)}\n              selectedFiles={this.selectedFiles}\n              restrictFileType={this.restrictFileType}\n            />\n          </div>\n\n          <div className=\"Modal-footer\">\n            <Button onclick={this.hide.bind(this)} className=\"Button\">\n              {app.translator.trans('fof-upload.forum.buttons.cancel')}\n            </Button>\n\n            <Button\n              onclick={this.onSelect.bind(this)}\n              disabled={this.selectedFiles.length === 0 || (!this.multiSelect && this.selectedFiles.length > 1)}\n              className=\"Button Button--primary\"\n            >\n              {app.translator.trans('fof-upload.forum.file_list.confirm_selection_btn', { fileCount })}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Add or remove file from selected files\n   *\n   * @param {File} file\n   */\n  onFileSelect(file) {\n    const itemPosition = this.selectedFiles.indexOf(file.id());\n\n    if (itemPosition >= 0) {\n      this.selectedFiles.splice(itemPosition, 1);\n    } else {\n      if (this.multiSelect) {\n        this.selectedFiles.push(file.id());\n      } else {\n        this.selectedFiles = [file.id()];\n      }\n    }\n  }\n\n  /**\n   * Add files to file list after upload\n   */\n  onUpload() {\n    this.uploader.on('success', ({ file }) => {\n      if (this.multiSelect) {\n        this.selectedFiles.push(file.id());\n      } else {\n        this.selectedFiles = [file.id()];\n      }\n    });\n  }\n\n  /**\n   * Add selected files to the composer\n   */\n  onSelect() {\n    this.hide();\n\n    // Custom callback\n    if (this.attrs.onSelect) {\n      this.attrs.onSelect(this.selectedFiles);\n\n      return;\n    }\n\n    // Add selected files to composer\n    this.selectedFiles.map((fileId) => {\n      const file = app.store.getById('files', fileId);\n\n      app.composer.editor.insertAtCursor(file.bbcode() + '\\n', false);\n    });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport FileManagerModal from './FileManagerModal';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class FileManagerButton extends Component {\n  view() {\n    return (\n      <Tooltip text={app.translator.trans('fof-upload.forum.buttons.media')}>\n        {Button.component({\n          className: 'Button fof-upload-button Button--icon',\n          onclick: this.fileManagerButtonClicked.bind(this),\n          icon: 'fas fa-photo-video',\n        })}\n      </Tooltip>\n    );\n  }\n\n  /**\n   * Event handler for upload button being clicked\n   *\n   * @param {PointerEvent} e\n   */\n  fileManagerButtonClicked(e) {\n    e.preventDefault();\n\n    // Open dialog\n    app.modal.show(FileManagerModal, {\n      uploader: this.attrs.uploader,\n    });\n  }\n}\n","import app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport UserFileList from './UserFileList';\n\nexport default class UploadsUserPage extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.user = null;\n\n    this.loadUser(m.route.param('username'));\n  }\n\n  content() {\n    if (app.session.user && (app.session.user.viewOthersMediaLibrary() || this.user === app.session.user)) {\n      return (\n        this.user &&\n        UserFileList.component({\n          user: this.user,\n          selectable: false,\n          downloadOnClick: true,\n        })\n      );\n    } else {\n      return null;\n    }\n  }\n\n  show(user) {\n    super.show(user);\n    this.user = user;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","import Uploader from '../handler/Uploader';\nimport DragAndDrop from './DragAndDrop';\nimport FileManagerButton from './FileManagerButton';\nimport FileManagerModal from './FileManagerModal';\nimport UserFileList from './UserFileList';\nimport UploadButton from './UploadButton';\n\nexport const components = {\n  DragAndDrop,\n  FileManagerButton,\n  FileManagerModal,\n  UserFileList,\n  Uploader,\n  UploadButton,\n};\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nimport File from '../common/models/File';\nimport FileListState from './states/FileListState';\nimport downloadButtonInteraction from './downloadButtonInteraction';\nimport addUploadButton from './addUploadButton';\nimport UploadsUserPage from './components/UploadsUserPage';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\n\nexport * from './components';\n\napp.initializers.add('fof-upload', () => {\n  User.prototype.viewOthersMediaLibrary = Model.attribute('fof-upload-viewOthersMediaLibrary');\n  User.prototype.deleteOthersMediaLibrary = Model.attribute('fof-upload-deleteOthersMediaLibrary');\n  User.prototype.uploadCountCurrent = Model.attribute('fof-upload-uploadCountCurrent');\n  User.prototype.uploadCountAll = Model.attribute('fof-upload-uploadCountAll');\n\n  addUploadButton();\n  downloadButtonInteraction();\n\n  // File model\n  app.store.models.files = File;\n\n  // File list state\n  app.fileListState = new FileListState();\n\n  // Add user uploads to the user profile\n  app.routes['user.uploads'] = {\n    path: '/u/:username/uploads',\n    component: UploadsUserPage,\n  };\n\n  // Add uploads to user page menu items\n  extend(UserPage.prototype, 'navItems', function (items) {\n    const canUpload = !!app.forum.attribute('fof-upload.canUpload');\n    const hasUploads = !!this.user.uploadCountCurrent();\n\n    if (app.session.user && (app.session.user.viewOthersMediaLibrary() || (this.user === app.session.user && (canUpload || hasUploads)))) {\n      const uploadCount = this.user.uploadCountCurrent();\n\n      items.add(\n        'uploads',\n        LinkButton.component(\n          {\n            href: app.route('user.uploads', {\n              username: this.user.username(),\n            }),\n            name: 'uploads',\n            icon: 'fas fa-file-upload',\n          },\n          [\n            this.user === app.session.user\n              ? app.translator.trans('fof-upload.forum.buttons.media')\n              : app.translator.trans('fof-upload.forum.buttons.user_uploads'),\n            ' ',\n            uploadCount > 0 ? <span className=\"Button-badge\">{uploadCount}</span> : '',\n          ]\n        ),\n        80\n      );\n    }\n  });\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport TextEditor from 'flarum/common/components/TextEditor';\nimport UploadButton from './components/UploadButton';\nimport DragAndDrop from './components/DragAndDrop';\nimport PasteClipboard from './components/PasteClipboard';\nimport Uploader from './handler/Uploader';\nimport FileManagerButton from './components/FileManagerButton';\n\nexport default function () {\n  extend(TextEditor.prototype, 'oninit', function () {\n    this.uploader = new Uploader();\n  });\n  extend(TextEditor.prototype, 'controlItems', function (items) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    const composerButtonVisiblity = app.forum.attribute('fof-upload.composerButtonVisiblity');\n\n    // Add media button\n    if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'media-btn') {\n      items.add(\n        'fof-upload-media',\n        FileManagerButton.component({\n          uploader: this.uploader,\n        })\n      );\n    }\n\n    // Add upload button\n    if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'upload-btn') {\n      items.add(\n        'fof-upload',\n        UploadButton.component({\n          uploader: this.uploader,\n        })\n      );\n    }\n  });\n\n  extend(TextEditor.prototype, 'oncreate', function (f_, vnode) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    this.uploader.on('success', ({ file, addBBcode }) => {\n      if (!addBBcode) return;\n\n      this.attrs.composer.editor.insertAtCursor(file.bbcode() + '\\n', false);\n\n      // We wrap this in a typeof check to prevent it running when a user\n      // is creating a new discussion. There's nothing to preview in a new\n      // discussion, so the `preview` function isn't defined.\n      if (typeof this.attrs.preview === 'function') {\n        // Scroll the preview into view\n        // preview() causes the composer to close on mobile, but we don't want that. We want only the scroll\n        // We work around that by temporarily patching the isFullScreen method\n        const originalIsFullScreen = app.composer.isFullScreen;\n\n        app.composer.isFullScreen = () => false;\n\n        this.attrs.preview();\n\n        app.composer.isFullScreen = originalIsFullScreen;\n      }\n    });\n\n    // Gracefully fail if the TextEditor was used in a non-Composer context\n    // Using a custom method to retrieve the target allows other extensions to still use this feature by returning an alternate container\n    const dragAndDropTarget = this.fofUploadDragAndDropTarget();\n\n    if (dragAndDropTarget) {\n      this.dragAndDrop = new DragAndDrop((files) => this.uploader.upload(files), dragAndDropTarget);\n    }\n\n    new PasteClipboard((files) => this.uploader.upload(files), this.$('.TextEditor-editor')[0]);\n  });\n\n  extend(TextEditor.prototype, 'onremove', function (f_, vnode) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    if (this.dragAndDrop) {\n      this.dragAndDrop.unload();\n    }\n  });\n\n  TextEditor.prototype.fofUploadDragAndDropTarget = function () {\n    return this.$().parents('.Composer')[0];\n  };\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Post from 'flarum/forum/components/Post';\n\n/* global $ */\n\nexport default function () {\n  extend(Post.prototype, 'oncreate', function () {\n    this.$('[data-fof-upload-download-uuid]')\n      .unbind('click')\n      .on('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!app.forum.attribute('fof-upload.canDownload')) {\n          alert(app.translator.trans('fof-upload.forum.states.unauthorized'));\n          return;\n        }\n\n        let url = app.forum.attribute('apiUrl') + '/fof/download';\n\n        url += '/' + encodeURIComponent(e.currentTarget.dataset.fofUploadDownloadUuid);\n        url += '/' + encodeURIComponent(this.attrs.post.id());\n        url += '/' + encodeURIComponent(app.session.csrfToken);\n\n        window.open(url);\n      });\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","File","_mixin","apply","arguments","apiEndpoint","this","exists","data","id","mixin","Model","baseName","path","url","type","size","humanSize","createdAt","uuid","tag","hidden","bbcode","FileListState","user","files","moreResults","loading","_proto","setUser","loadResults","offset","app","find","filter","page","then","parseResults","bind","loadMore","length","results","_this$files","push","payload","links","next","m","redraw","addToList","_this$files2","Array","isArray","unshift","hasFiles","isLoading","hasMoreResults","empty","UploadButton","_Component","oninit","vnode","_this","attrs","uploader","on","$","reset","isMediaUploadButton","view","buttonText","uploading","trans","Tooltip","text","Button","className","classList","icon","onclick","uploadButtonClicked","disabled","LoadingIndicator","display","multiple","onchange","process","e","upload","click","Component","DragAndDrop","composerElement","handlers","supportsFileDragging","addEventListener","out","dropping","div","document","createElement","window","unload","removeEventListener","isNotFile","event","dataTransfer","items","i","kind","preventDefault","over","add","remove","PasteClipboard","element","paste","clipboardData","indexOf","getAsFile","Uploader","callbacks","success","failure","uploaded","callback","dispatch","response","forEach","addBBcode","body","FormData","append","method","attribute","serialize","raw","result","error","errors","code","includes","clear","show","detail","_this2","file","fileObj","pushObject","image","archive","word","UserFileList","inModal","selectable","restrictFileType","downloadOnClick","filesBeingHidden","state","map","fileType","fileIcon","fileSelectable","isSelectable","fileClassNames","selectedFiles","fileName","isFileHiding","deleteOthersMediaLibrary","hideFile","onFileClick","extractText","src","draggable","alt","role","class","onFileSelect","open","confirm","Alert","index","findIndex","splice","FileManagerModal","_Modal","multiSelect","dragDrop","onUpload","oncreate","onremove","fileCount","fileListState","translator","alertAttrs","hide","onSelect","itemPosition","_ref","fileId","store","getById","composer","editor","insertAtCursor","Modal","FileManagerButton","fileManagerButtonClicked","UploadsUserPage","_UserPage","loadUser","route","param","content","viewOthersMediaLibrary","component","UserPage","components","User","uploadCountCurrent","uploadCountAll","extend","TextEditor","composerButtonVisiblity","f_","preview","originalIsFullScreen","isFullScreen","dragAndDropTarget","fofUploadDragAndDropTarget","dragAndDrop","parents","Post","unbind","stopPropagation","encodeURIComponent","currentTarget","dataset","fofUploadDownloadUuid","post","csrfToken","alert","models","canUpload","hasUploads","uploadCount","LinkButton","href","username","name"],"sourceRoot":""}