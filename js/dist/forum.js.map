{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@fof/upload/webpack/bootstrap","webpack://@fof/upload/webpack/runtime/compat get default export","webpack://@fof/upload/webpack/runtime/define property getters","webpack://@fof/upload/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/upload/webpack/runtime/make namespace object","webpack://@fof/upload/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/upload/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/upload/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/upload/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/upload/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/mixin']\"","webpack://@fof/upload/./src/common/models/File.js","webpack://@fof/upload/./src/forum/states/FileListState.js","webpack://@fof/upload/external root \"flarum.core.compat['forum/components/Post']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/TextEditor']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/Component']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/classList']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@fof/upload/./src/forum/components/UploadButton.js","webpack://@fof/upload/./src/forum/components/DragAndDrop.js","webpack://@fof/upload/./src/forum/components/PasteClipboard.js","webpack://@fof/upload/./src/forum/handler/Uploader.js","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/components/Alert']\"","webpack://@fof/upload/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@fof/upload/./src/common/mimeToIcon.js","webpack://@fof/upload/./src/forum/components/UserFileList.js","webpack://@fof/upload/./src/forum/components/FileManagerModal.js","webpack://@fof/upload/./src/forum/components/FileManagerButton.js","webpack://@fof/upload/./src/forum/components/UploadsUserPage.js","webpack://@fof/upload/external root \"flarum.core.compat['common/models/User']\"","webpack://@fof/upload/./src/forum/components/index.js","webpack://@fof/upload/./src/forum/index.js","webpack://@fof/upload/./src/forum/addUploadButton.js","webpack://@fof/upload/./src/forum/downloadButtonInteraction.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/mixin'];","import Model from 'flarum/common/Model';\nimport mixin from 'flarum/common/utils/mixin';\n\nexport default class File extends mixin(Model, {\n  baseName: Model.attribute('baseName'),\n  path: Model.attribute('path'),\n  url: Model.attribute('url'),\n  type: Model.attribute('type'),\n  size: Model.attribute('size'),\n  humanSize: Model.attribute('humanSize'),\n  createdAt: Model.attribute('createdAt'),\n  uuid: Model.attribute('uuid'),\n  tag: Model.attribute('tag'),\n  hidden: Model.attribute('hidden'),\n  bbcode: Model.attribute('bbcode'),\n}) {\n  /**\n   * Use FoF Uploads endpoint\n   */\n  apiEndpoint() {\n    return '/fof/uploads' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import app from 'flarum/forum/app';\n\nexport default class FileListState {\n  constructor() {\n    this.user = null;\n\n    this.files = [];\n\n    this.moreResults = false;\n\n    this.loading = false;\n  }\n\n  /**\n   * Set user and load list\n   *\n   * @param user A user to populate the media manager\n   */\n  setUser(user) {\n    // Keep previous state\n    if (user === this.user) return;\n\n    // Set user\n    this.user = user;\n\n    // Reset file list\n    this.files = [];\n\n    // Load user files\n    this.loadResults();\n  }\n\n  /**\n   * Load more user files\n   *\n   * @param offset The index to start the page at.\n   */\n  loadResults(offset = 0) {\n    if (!this.user) return;\n\n    this.loading = true;\n\n    return app.store\n      .find('fof/uploads', {\n        filter: {\n          user: this.user.id(),\n        },\n        page: {\n          offset,\n        },\n      })\n      .then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Load the next page of discussion results.\n   */\n  loadMore() {\n    this.loading = true;\n\n    this.loadResults(this.files.length).then(this.parseResults.bind(this));\n  }\n\n  /**\n   * Parse results and append them to the file list.\n   */\n  parseResults(results) {\n    this.files.push(...results);\n\n    this.loading = false;\n    this.moreResults = !!results.payload.links && !!results.payload.links.next;\n\n    m.redraw();\n\n    return results;\n  }\n\n  /**\n   * Add files to the beginning of the list\n   */\n  addToList(files) {\n    if (Array.isArray(files)) {\n      this.files.unshift(...files);\n    } else {\n      this.files.unshift(files);\n    }\n  }\n\n  /**\n   * Are there any files in the list?\n   */\n  hasFiles() {\n    return this.files.length > 0;\n  }\n\n  /**\n   * Is the file list loading?\n   */\n  isLoading() {\n    return this.loading;\n  }\n\n  /**\n   * Does this user has more files?\n   */\n  hasMoreResults() {\n    return this.moreResults;\n  }\n\n  /**\n   * Does this user have any files?\n   */\n  empty() {\n    return !this.hasFiles() && !this.isLoading();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/TextEditor'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/classList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport classList from 'flarum/common/utils/classList';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class UploadButton extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.attrs.uploader.on('uploaded', () => {\n      // reset the button for a new upload\n      this.$('form')[0].reset();\n\n      // redraw to reflect uploader.loading in the DOM\n      m.redraw();\n    });\n\n    this.isMediaUploadButton = vnode.attrs.isMediaUploadButton || false;\n  }\n\n  view() {\n    const buttonText = this.attrs.uploader.uploading\n      ? app.translator.trans('fof-upload.forum.states.loading')\n      : app.translator.trans('fof-upload.forum.buttons.upload');\n\n    return (\n      <Tooltip text={buttonText}>\n        <Button\n          className={classList([\n            'Button',\n            'hasIcon',\n            'fof-upload-button',\n            !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--icon',\n            !this.isMediaUploadButton && !this.attrs.uploader.uploading && 'Button--link',\n            this.attrs.uploader.uploading && 'uploading',\n          ])}\n          icon={!this.attrs.uploader.uploading && 'fas fa-file-upload'}\n          onclick={this.uploadButtonClicked.bind(this)}\n          disabled={this.attrs.disabled}\n        >\n          {this.attrs.uploader.uploading && <LoadingIndicator size=\"small\" display=\"inline\" className=\"Button-icon\" />}\n          {(this.isMediaUploadButton || this.attrs.uploader.uploading) && <span className=\"Button-label\">{buttonText}</span>}\n          <form>\n            <input type=\"file\" multiple={true} onchange={this.process.bind(this)} />\n          </form>\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  /**\n   * Process the upload event.\n   *\n   * @param e\n   */\n  process(e) {\n    // get the file from the input field\n    const files = this.$('input').prop('files');\n\n    if (files.length === 0) {\n      // We've got no files to upload, so trying\n      // to begin an upload will show an error\n      // to the user.\n      return;\n    }\n\n    this.attrs.uploader.upload(files, !this.isMediaUploadButton);\n  }\n\n  /**\n   * Event handler for upload button being clicked\n   *\n   * @param {PointerEvent} e\n   */\n  uploadButtonClicked(e) {\n    // Trigger click on hidden input element\n    // (Opens file dialog)\n    this.$('input').click();\n  }\n}\n","export default class DragAndDrop {\n  constructor(upload, composerElement) {\n    this.upload = upload;\n    this.composerElement = composerElement;\n\n    // Keep references to the bound methods so we can remove the event listeners later\n    this.handlers = {};\n\n    if (!this.supportsFileDragging()) {\n      return;\n    }\n\n    this.composerElement.addEventListener('dragover', (this.handlers.in = this.in.bind(this)));\n\n    this.composerElement.addEventListener('dragleave', (this.handlers.out = this.out.bind(this)));\n    this.composerElement.addEventListener('dragend', this.handlers.out);\n\n    this.composerElement.addEventListener('drop', (this.handlers.dropping = this.dropping.bind(this)));\n  }\n\n  supportsFileDragging() {\n    // Based on https://css-tricks.com/drag-and-drop-file-uploading/\n    const div = document.createElement('div');\n\n    return ('draggable' in div || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;\n  }\n\n  unload() {\n    // If the handlers were not set (drag and drop not supported), we skip removing them\n    if (!this.handlers.in) {\n      return;\n    }\n\n    this.composerElement.removeEventListener('dragover', this.handlers.in);\n\n    this.composerElement.removeEventListener('dragleave', this.handlers.out);\n    this.composerElement.removeEventListener('dragend', this.handlers.out);\n\n    this.composerElement.removeEventListener('drop', this.handlers.dropping);\n  }\n\n  isNotFile(event) {\n    // Checking event.dataTransfer.files.length does not work on dragover event, it's always zero\n    // So we use the dataTransfer.items property to check whether any file is being dragged\n    if (event.dataTransfer.items) {\n      for (let i = 0; i < event.dataTransfer.items.length; i++) {\n        if (event.dataTransfer.items[i].kind !== 'file') {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  in(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.over) {\n      this.composerElement.classList.add('fof-upload-dragging');\n      this.over = true;\n    }\n  }\n\n  out(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (this.over) {\n      this.composerElement.classList.remove('fof-upload-dragging');\n      this.over = false;\n    }\n  }\n\n  dropping(event) {\n    if (this.isNotFile(event)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    this.upload(event.dataTransfer.files);\n\n    this.composerElement.classList.remove('fof-upload-dragging');\n  }\n}\n","export default class PasteClipboard {\n  constructor(upload, element) {\n    this.upload = upload;\n\n    // We don't need to remove the events listeners, because they'll get removed when the DOM does.\n    element.addEventListener('paste', this.paste.bind(this));\n  }\n\n  paste(e) {\n    if (e.clipboardData && e.clipboardData.items) {\n      const items = e.clipboardData.items;\n\n      const files = [];\n\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].type.indexOf('image') !== -1) {\n          files.push(items[i].getAsFile());\n        }\n      }\n\n      if (files.length > 0) {\n        e.preventDefault();\n\n        this.upload(files);\n      }\n    }\n  }\n}\n","import app from 'flarum/forum/app';\n\nexport default class Uploader {\n  constructor() {\n    this.callbacks = {\n      success: [],\n      failure: [],\n      uploading: [],\n      uploaded: [],\n    };\n    this.uploading = false;\n  }\n\n  on(type, callback) {\n    this.callbacks[type].push(callback);\n  }\n\n  dispatch(type, response) {\n    this.callbacks[type].forEach((callback) => callback(response));\n  }\n\n  upload(files, addBBcode = true) {\n    this.uploading = true;\n    this.dispatch('uploading', files);\n\n    m.redraw(); // Forcing a redraw so that the button also updates if uploadFiles() is called from DragAndDrop or PasteClipboard\n\n    const body = new FormData();\n\n    for (let i = 0; i < files.length; i++) {\n      body.append('files[]', files[i]);\n    }\n\n    // send a POST request to the api\n    return app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/fof/upload',\n        // prevent JSON.stringify'ing the form data in the XHR call\n        serialize: (raw) => raw,\n        body,\n      })\n      .then((result) => this.uploaded(result, addBBcode))\n      .catch((error) => {\n        this.uploading = false;\n        m.redraw();\n\n        const e = error.response.errors[0];\n\n        if (!e.code.includes('fof-upload')) {\n          throw error;\n        }\n\n        app.alerts.clear();\n        app.alerts.show(\n          {\n            type: 'error',\n          },\n          e.detail\n        );\n      });\n  }\n\n  uploaded(result, addBBcode = false) {\n    this.uploading = false;\n\n    result.data.forEach((file) => {\n      const fileObj = app.store.pushObject(file);\n\n      // Add file to media manager\n      app.fileListState.addToList(fileObj);\n\n      // Dispatch\n      this.dispatch('success', {\n        file: fileObj,\n        addBBcode,\n      });\n    });\n\n    this.dispatch('uploaded');\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Alert'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const image = ['image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml', 'image/gif'];\nconst archive = ['application/zip', 'application/x-7z-compressed', 'application/gzip', 'application/vnd.rar', 'application/x-rar-compressed'];\nconst code = ['text/html', 'text/css', 'text/javascript', 'application/json', 'application/ld+json', 'text/javascript', 'application/x-httpd-php'];\nconst word = [\n  'application/x-abiword',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'application/pdf',\n];\n\n/**\n * Returns a FontAwesome icon class for a specified MIME type.\n *\n * If it's a known image type, it returns `image` instead.\n *\n * @param {string} fileType MIME type\n * @returns {string} Icon for MIME type\n */\nexport default function mimeToIcon(fileType) {\n  // Display image (do not display for)\n  if (image.includes(fileType)) {\n    return 'image';\n  }\n  // Display image icon for other types\n  else if (fileType.includes('image/')) {\n    return 'far fa-file-image';\n  }\n  // Video icon\n  else if (fileType.includes('video/')) {\n    return 'far fa-file-video';\n  }\n  // Archive icon\n  else if (archive.indexOf(fileType) >= 0) {\n    return 'far fa-file-archive';\n  }\n  // PDF icon\n  else if (fileType === 'application/pdf') {\n    return 'far fa-file-pdf';\n  }\n  // Word\n  else if (word.indexOf(fileType) >= 0) {\n    return 'far fa-file-word';\n  }\n  // Audio icon\n  else if (fileType.includes('audio/')) {\n    return 'far fa-file-audio';\n  }\n  // Code files\n  else if (code.indexOf(fileType) >= 0) {\n    return 'far fa-file-code';\n  }\n\n  return 'far fa-file';\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\n\nimport Button from 'flarum/common/components/Button';\nimport Alert from 'flarum/common/components/Alert';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nimport classList from 'flarum/common/utils/classList';\nimport extractText from 'flarum/common/utils/extractText';\n\nimport mimeToIcon from '../../common/mimeToIcon';\n\nexport default class UserFileList extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Load file list\n    app.fileListState.setUser(vnode.attrs.user || app.session.user);\n\n    this.inModal = vnode.attrs.selectable;\n    this.restrictFileType = vnode.attrs.restrictFileType || null;\n    this.downloadOnClick = this.attrs.downloadOnClick || false;\n    /**\n     * @type {string[]} List of file UUIDs currently being hidden.\n     */\n    this.filesBeingHidden = [];\n\n    /**\n     * The user who's media we are dealing with\n     */\n    this.user = app.fileListState.user;\n  }\n\n  view() {\n    /**\n     * @type {{empty(): boolean, files: import('../../common/models/File').default[]}}\n     */\n    const state = app.fileListState;\n\n    return (\n      <div className=\"fof-upload-file-list\" aria-live=\"polite\">\n        {/* Loading */}\n        {state.isLoading() && state.files.length === 0 && (\n          <div className={'fof-upload-loading'}>\n            {app.translator.trans('fof-upload.forum.file_list.loading')}\n\n            <LoadingIndicator />\n          </div>\n        )}\n\n        {/* Empty personal file list */}\n        {this.inModal && state.empty() && (\n          <p className=\"fof-upload-empty\">\n            <i className=\"fas fa-cloud-upload-alt fof-upload-empty-icon\" />\n            {app.translator.trans(`fof-upload.forum.file_list.modal_empty_${app.screen() !== 'phone' ? 'desktop' : 'phone'}`)}\n          </p>\n        )}\n\n        {/* Empty file list */}\n        {!this.inModal && state.empty() && (\n          <div className=\"Placeholder\">\n            <p className=\"fof-upload-empty\">{app.translator.trans('fof-upload.forum.file_list.empty')}</p>\n          </div>\n        )}\n\n        {/* File list */}\n        <ul>\n          {state.files.map((file) => {\n            const fileIcon = mimeToIcon(file.type());\n            const fileSelectable = this.restrictFileType ? this.isSelectable(file) : true;\n\n            const fileClassNames = classList([\n              'fof-file',\n              // File is image\n              fileIcon === 'image' && 'fof-file-type-image',\n              // File is selected\n              this.attrs.selectedFiles && this.attrs.selectedFiles.indexOf(file.id()) >= 0 && 'fof-file-selected',\n            ]);\n\n            /**\n             * File's baseName (file name + extension)\n             * @type {string}\n             */\n            const fileName = file.baseName();\n\n            const isFileHiding = this.filesBeingHidden.includes(file.uuid());\n\n            return (\n              <li aria-busy={isFileHiding}>\n                {app.session.user && (this.user === app.session.user || app.session.user.deleteOthersMediaLibrary()) && (\n                  <Button\n                    className=\"Button Button--icon fof-file-delete\"\n                    icon=\"far fa-trash-alt\"\n                    aria-label={app.translator.trans('fof-upload.forum.file_list.delete_file_a11y_label', { fileName })}\n                    disabled={isFileHiding}\n                    onclick={this.hideFile.bind(this, file)}\n                  />\n                )}\n\n                <button\n                  className={fileClassNames}\n                  onclick={() => this.onFileClick(file)}\n                  disabled={!fileSelectable || isFileHiding}\n                  aria-label={extractText(app.translator.trans('fof-upload.forum.file_list.select_file_a11y_label', { fileName }))}\n                >\n                  <figure>\n                    {fileIcon === 'image' ? (\n                      <img\n                        src={file.url()}\n                        className=\"fof-file-image-preview\"\n                        draggable={false}\n                        // Images should always have an `alt`, even if empty!\n                        //\n                        // As we already state the file name as part of the\n                        // button alt label, there's no point in restating it.\n                        //\n                        // See: https://www.w3.org/WAI/tutorials/images/decorative#decorative-image-as-part-of-a-text-link\n                        alt=\"\"\n                      />\n                    ) : (\n                      <span\n                        className=\"fof-file-icon\"\n                        // Prevents a screen-reader from traversing this node.\n                        //\n                        // This is a placeholder for when no preview is available,\n                        // and a preview won't benefit a user using a screen\n                        // reader anyway, so there is no benefit to making them\n                        // aware of a lack of a preview.\n                        role=\"presentation\"\n                      >\n                        <i className={`fa-fw ${fileIcon}`} />\n                      </span>\n                    )}\n\n                    <figcaption className=\"fof-file-name\">{fileName}</figcaption>\n\n                    {isFileHiding && (\n                      <span class=\"fof-file-loading\" role=\"status\" aria-label={app.translator.trans('fof-upload.forum.file_list.hide_file.loading')}>\n                        <LoadingIndicator />\n                      </span>\n                    )}\n                  </figure>\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        {/* Load more files */}\n        {state.hasMoreResults() && (\n          <div className={'fof-load-more-files'}>\n            <Button className={'Button Button--primary'} disabled={state.isLoading()} loading={state.isLoading()} onclick={() => state.loadMore()}>\n              {app.translator.trans('fof-upload.forum.file_list.load_more_files_btn')}\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Execute function on file click\n   *\n   * @param {import('../../common/models/File').default} file\n   */\n  onFileClick(file) {\n    // Custom functionality\n    if (this.attrs.onFileSelect) {\n      this.attrs.onFileSelect(file);\n      return;\n    }\n\n    // Download on click\n    if (this.attrs.downloadOnClick) {\n      window.open(file.url());\n      return;\n    }\n  }\n\n  /**\n   * Check if a file is selectable\n   *\n   * @param {import('../../common/models/File').default} file\n   */\n  isSelectable(file) {\n    const fileType = file.type();\n\n    // Custom defined file types\n    if (Array.isArray(this.restrictFileType)) {\n      return this.restrictFileType.indexOf(fileType) >= 0;\n    }\n\n    // Image\n    else if (this.restrictFileType === 'image') {\n      return fileType.includes('image/');\n    }\n\n    // Audio\n    else if (this.restrictFileType === 'audio') {\n      return fileType.includes('audio/');\n    }\n\n    // Video\n    else if (this.restrictFileType === 'video') {\n      return fileType.includes('video/');\n    }\n\n    return false;\n  }\n\n  /**\n   * Begins the hiding process for a file.\n   *\n   * - Shows a native confirmation dialog\n   * - If confirmed, sends AJAX request to the hide file API\n   *\n   * @param {import('../../common/models/File').default} file File to hide\n   */\n  hideFile(file) {\n    /**\n     * @type {string} File UUID\n     */\n    const uuid = file.uuid();\n\n    if (this.filesBeingHidden.includes(uuid)) return;\n\n    this.filesBeingHidden.push(uuid);\n\n    const confirmHide = confirm(\n      extractText(app.translator.trans('fof-upload.forum.file_list.hide_file.hide_confirmation', { fileName: file.baseName() }))\n    );\n\n    if (confirmHide) {\n      app\n        .request({\n          method: 'PATCH',\n          url: `${app.forum.attribute('apiUrl')}/fof/upload/hide`,\n          body: { uuid },\n        })\n        .then(() => {\n          app.alerts.show(Alert, { type: 'success' }, app.translator.trans('fof-upload.forum.file_list.hide_file.hide_success'));\n        })\n        .catch(() => {\n          app.alerts.show(\n            Alert,\n            { type: 'error' },\n            app.translator.trans('fof-upload.forum.file_list.hide_file.hide_fail', { fileName: file.fileName() })\n          );\n        })\n        .then(() => {\n          // Remove hidden file from state\n          /**\n           * @type {{ files: import('../../common/models/File').default[] }}\n           */\n          const state = app.fileListState;\n\n          const index = state.files.findIndex((file) => uuid === file.uuid());\n          state.files.splice(index, 1);\n\n          // Remove file from hiding list\n          const i = this.filesBeingHidden.indexOf(uuid);\n          this.filesBeingHidden.splice(i, 1);\n        });\n    } else {\n      // Remove file from hiding list\n      const i = this.filesBeingHidden.indexOf(uuid);\n      this.filesBeingHidden.splice(i, 1);\n    }\n  }\n}\n","import Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport UploadButton from './UploadButton';\nimport UserFileList from './UserFileList';\nimport DragAndDrop from './DragAndDrop';\n\nexport default class FileManagerModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    // Initialize upload managers\n    this.uploader = vnode.attrs.uploader;\n\n    // Current selected files\n    this.selectedFiles = [];\n\n    // Allow multiselect\n    this.multiSelect = vnode.attrs.multiSelect || true;\n\n    // Restrict file selection to specific types\n    this.restrictFileType = vnode.attrs.restrictFileType || null;\n\n    // Drag & drop\n    this.dragDrop = null;\n\n    // Initialize uploads\n    this.onUpload();\n  }\n\n  className() {\n    return 'Modal--large fof-file-manager-modal';\n  }\n\n  /**\n   * Initialize drag & drop\n   */\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.dragDrop = new DragAndDrop((files) => this.uploader.upload(files, false), this.$().find('.Modal-content')[0]);\n  }\n\n  /**\n   * Remove events from modal content\n   */\n  onremove() {\n    if (this.dragDrop) {\n      this.dragDrop.unload();\n    }\n  }\n\n  view() {\n    const fileCount = this.selectedFiles.length;\n\n    return (\n      <div className={`Modal modal-dialog ${this.className()}`}>\n        <div className=\"Modal-content\">\n          <div className=\"fof-modal-buttons App-backControl\">\n            <UploadButton uploader={this.uploader} disabled={app.fileListState.isLoading()} isMediaUploadButton />\n          </div>\n\n          <div className=\"fof-drag-and-drop\">\n            <div className=\"fof-drag-and-drop-release\">\n              <i className=\"fas fa-cloud-upload-alt\" />\n\n              {app.translator.trans('fof-upload.forum.file_list.release_to_upload')}\n            </div>\n          </div>\n\n          <div className=\"Modal-header\">\n            <h3 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('fof-upload.forum.media_manager')}</h3>\n          </div>\n\n          {this.alertAttrs && (\n            <div className=\"Modal-alert\">\n              <Alert {...this.alertAttrs} />\n            </div>\n          )}\n\n          <div className=\"Modal-body\">\n            <UserFileList\n              user={this.attrs.user}\n              selectable\n              onFileSelect={this.onFileSelect.bind(this)}\n              selectedFiles={this.selectedFiles}\n              restrictFileType={this.restrictFileType}\n            />\n          </div>\n\n          <div className=\"Modal-footer\">\n            <Button onclick={this.hide.bind(this)} className=\"Button\">\n              {app.translator.trans('fof-upload.forum.buttons.cancel')}\n            </Button>\n\n            <Button\n              onclick={this.onSelect.bind(this)}\n              disabled={this.selectedFiles.length === 0 || (!this.multiSelect && this.selectedFiles.length > 1)}\n              className=\"Button Button--primary\"\n            >\n              {app.translator.trans('fof-upload.forum.file_list.confirm_selection_btn', { fileCount })}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Add or remove file from selected files\n   *\n   * @param {File} file\n   */\n  onFileSelect(file) {\n    const itemPosition = this.selectedFiles.indexOf(file.id());\n\n    if (itemPosition >= 0) {\n      this.selectedFiles.splice(itemPosition, 1);\n    } else {\n      if (this.multiSelect) {\n        this.selectedFiles.push(file.id());\n      } else {\n        this.selectedFiles = [file.id()];\n      }\n    }\n  }\n\n  /**\n   * Add files to file list after upload\n   */\n  onUpload() {\n    this.uploader.on('success', ({ file }) => {\n      if (this.multiSelect) {\n        this.selectedFiles.push(file.id());\n      } else {\n        this.selectedFiles = [file.id()];\n      }\n    });\n  }\n\n  /**\n   * Add selected files to the composer\n   */\n  onSelect() {\n    this.hide();\n\n    // Custom callback\n    if (this.attrs.onSelect) {\n      this.attrs.onSelect(this.selectedFiles);\n\n      return;\n    }\n\n    // Add selected files to composer\n    this.selectedFiles.map((fileId) => {\n      const file = app.store.getById('files', fileId);\n\n      app.composer.editor.insertAtCursor(file.bbcode() + '\\n', false);\n    });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport FileManagerModal from './FileManagerModal';\nimport Tooltip from 'flarum/common/components/Tooltip';\n\nexport default class FileManagerButton extends Component {\n  view() {\n    return (\n      <Tooltip text={app.translator.trans('fof-upload.forum.buttons.media')}>\n        {Button.component({\n          className: 'Button fof-upload-button Button--icon',\n          onclick: this.fileManagerButtonClicked.bind(this),\n          icon: 'fas fa-photo-video',\n        })}\n      </Tooltip>\n    );\n  }\n\n  /**\n   * Event handler for upload button being clicked\n   *\n   * @param {PointerEvent} e\n   */\n  fileManagerButtonClicked(e) {\n    e.preventDefault();\n\n    // Open dialog\n    app.modal.show(FileManagerModal, {\n      uploader: this.attrs.uploader,\n    });\n  }\n}\n","import app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport UserFileList from './UserFileList';\n\nexport default class UploadsUserPage extends UserPage {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.user = null;\n\n    this.loadUser(m.route.param('username'));\n  }\n\n  content() {\n    if (app.session.user && (app.session.user.viewOthersMediaLibrary() || this.user === app.session.user)) {\n      return (\n        this.user &&\n        UserFileList.component({\n          user: this.user,\n          selectable: false,\n          downloadOnClick: true,\n        })\n      );\n    } else {\n      return null;\n    }\n  }\n\n  show(user) {\n    super.show(user);\n    this.user = user;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","import Uploader from '../handler/Uploader';\nimport DragAndDrop from './DragAndDrop';\nimport FileManagerButton from './FileManagerButton';\nimport FileManagerModal from './FileManagerModal';\nimport UserFileList from './UserFileList';\nimport UploadButton from './UploadButton';\n\nexport const components = {\n  DragAndDrop,\n  FileManagerButton,\n  FileManagerModal,\n  UserFileList,\n  Uploader,\n  UploadButton,\n};\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport LinkButton from 'flarum/common/components/LinkButton';\n\nimport File from '../common/models/File';\nimport FileListState from './states/FileListState';\nimport downloadButtonInteraction from './downloadButtonInteraction';\nimport addUploadButton from './addUploadButton';\nimport UploadsUserPage from './components/UploadsUserPage';\nimport User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\n\nexport * from './components';\n\napp.initializers.add('fof-upload', () => {\n  User.prototype.viewOthersMediaLibrary = Model.attribute('fof-upload-viewOthersMediaLibrary');\n  User.prototype.deleteOthersMediaLibrary = Model.attribute('fof-upload-deleteOthersMediaLibrary');\n  User.prototype.uploadCountCurrent = Model.attribute('fof-upload-uploadCountCurrent');\n  User.prototype.uploadCountAll = Model.attribute('fof-upload-uploadCountAll');\n\n  addUploadButton();\n  downloadButtonInteraction();\n\n  // File model\n  app.store.models.files = File;\n\n  // File list state\n  app.fileListState = new FileListState();\n\n  // Add user uploads to the user profile\n  app.routes['user.uploads'] = {\n    path: '/u/:username/uploads',\n    component: UploadsUserPage,\n  };\n\n  // Add uploads to user page menu items\n  extend(UserPage.prototype, 'navItems', function (items) {\n    const canUpload = !!app.forum.attribute('fof-upload.canUpload');\n    const hasUploads = !!this.user.uploadCountCurrent();\n\n    if (app.session.user && (app.session.user.viewOthersMediaLibrary() || (this.user === app.session.user && (canUpload || hasUploads)))) {\n      const uploadCount = this.user.uploadCountCurrent();\n\n      items.add(\n        'uploads',\n        LinkButton.component(\n          {\n            href: app.route('user.uploads', {\n              username: this.user.username(),\n            }),\n            name: 'uploads',\n            icon: 'fas fa-file-upload',\n          },\n          [\n            this.user === app.session.user\n              ? app.translator.trans('fof-upload.forum.buttons.media')\n              : app.translator.trans('fof-upload.forum.buttons.user_uploads'),\n            ' ',\n            uploadCount > 0 ? <span className=\"Button-badge\">{uploadCount}</span> : '',\n          ]\n        ),\n        80\n      );\n    }\n  });\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport TextEditor from 'flarum/common/components/TextEditor';\nimport UploadButton from './components/UploadButton';\nimport DragAndDrop from './components/DragAndDrop';\nimport PasteClipboard from './components/PasteClipboard';\nimport Uploader from './handler/Uploader';\nimport FileManagerButton from './components/FileManagerButton';\n\nexport default function () {\n  extend(TextEditor.prototype, 'oninit', function () {\n    this.uploader = new Uploader();\n  });\n  extend(TextEditor.prototype, 'controlItems', function (items) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    const composerButtonVisiblity = app.forum.attribute('fof-upload.composerButtonVisiblity');\n\n    // Add media button\n    if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'media-btn') {\n      items.add(\n        'fof-upload-media',\n        FileManagerButton.component({\n          uploader: this.uploader,\n        })\n      );\n    }\n\n    // Add upload button\n    if (composerButtonVisiblity === 'both' || composerButtonVisiblity === 'upload-btn') {\n      items.add(\n        'fof-upload',\n        UploadButton.component({\n          uploader: this.uploader,\n        })\n      );\n    }\n  });\n\n  extend(TextEditor.prototype, 'oncreate', function (f_, vnode) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    this.uploader.on('success', ({ file, addBBcode }) => {\n      if (!addBBcode) return;\n\n      this.attrs.composer.editor.insertAtCursor(file.bbcode() + '\\n', false);\n\n      // We wrap this in a typeof check to prevent it running when a user\n      // is creating a new discussion. There's nothing to preview in a new\n      // discussion, so the `preview` function isn't defined.\n      if (typeof this.attrs.preview === 'function') {\n        // Scroll the preview into view\n        // preview() causes the composer to close on mobile, but we don't want that. We want only the scroll\n        // We work around that by temporarily patching the isFullScreen method\n        const originalIsFullScreen = app.composer.isFullScreen;\n\n        app.composer.isFullScreen = () => false;\n\n        this.attrs.preview();\n\n        app.composer.isFullScreen = originalIsFullScreen;\n      }\n    });\n\n    this.dragAndDrop = new DragAndDrop((files) => this.uploader.upload(files), this.$().parents('.Composer')[0]);\n\n    new PasteClipboard((files) => this.uploader.upload(files), this.$('.TextEditor-editor')[0]);\n  });\n\n  extend(TextEditor.prototype, 'onremove', function (f_, vnode) {\n    if (!app.forum.attribute('fof-upload.canUpload')) return;\n\n    this.dragAndDrop.unload();\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Post from 'flarum/forum/components/Post';\n\n/* global $ */\n\nexport default function () {\n  extend(Post.prototype, 'oncreate', function () {\n    this.$('[data-fof-upload-download-uuid]')\n      .unbind('click')\n      .on('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!app.forum.attribute('fof-upload.canDownload')) {\n          alert(app.translator.trans('fof-upload.forum.states.unauthorized'));\n          return;\n        }\n\n        let url = app.forum.attribute('apiUrl') + '/fof/download';\n\n        url += '/' + encodeURIComponent(e.currentTarget.dataset.fofUploadDownloadUuid);\n        url += '/' + encodeURIComponent(this.attrs.post.id());\n        url += '/' + encodeURIComponent(app.session.csrfToken);\n\n        window.open(url);\n      });\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","File","apiEndpoint","this","exists","data","id","mixin","Model","baseName","path","url","type","size","humanSize","createdAt","uuid","tag","hidden","bbcode","FileListState","user","files","moreResults","loading","setUser","loadResults","offset","app","find","filter","page","then","parseResults","bind","loadMore","length","results","push","payload","links","next","m","redraw","addToList","Array","isArray","unshift","hasFiles","isLoading","hasMoreResults","empty","UploadButton","oninit","vnode","attrs","uploader","on","$","reset","isMediaUploadButton","view","buttonText","uploading","trans","text","className","classList","icon","onclick","uploadButtonClicked","disabled","display","multiple","onchange","process","e","upload","click","Component","DragAndDrop","composerElement","handlers","supportsFileDragging","addEventListener","out","dropping","div","document","createElement","window","unload","removeEventListener","isNotFile","event","dataTransfer","items","i","kind","preventDefault","over","add","remove","PasteClipboard","element","paste","clipboardData","indexOf","getAsFile","Uploader","callbacks","success","failure","uploaded","callback","dispatch","response","forEach","addBBcode","body","FormData","append","method","attribute","serialize","raw","result","error","errors","code","includes","clear","show","detail","file","fileObj","pushObject","image","archive","word","UserFileList","inModal","selectable","restrictFileType","downloadOnClick","filesBeingHidden","state","map","fileType","fileIcon","fileSelectable","isSelectable","fileClassNames","selectedFiles","fileName","isFileHiding","deleteOthersMediaLibrary","hideFile","onFileClick","extractText","src","draggable","alt","role","class","onFileSelect","open","confirm","Alert","index","findIndex","splice","FileManagerModal","multiSelect","dragDrop","onUpload","oncreate","onremove","fileCount","fileListState","translator","alertAttrs","hide","onSelect","itemPosition","fileId","store","getById","composer","editor","insertAtCursor","Modal","FileManagerButton","Button","fileManagerButtonClicked","UploadsUserPage","loadUser","route","param","content","viewOthersMediaLibrary","component","UserPage","components","User","uploadCountCurrent","uploadCountAll","extend","TextEditor","composerButtonVisiblity","f_","preview","originalIsFullScreen","isFullScreen","dragAndDrop","parents","Post","unbind","stopPropagation","encodeURIComponent","currentTarget","dataset","fofUploadDownloadUuid","post","csrfToken","alert","models","canUpload","hasUploads","uploadCount","LinkButton","href","username","name"],"sourceRoot":""}